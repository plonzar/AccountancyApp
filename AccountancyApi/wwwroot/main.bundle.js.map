{"version":3,"sources":["./ClientApp/$_lazy_route_resource lazy","./ClientApp/app/app.component.css","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/components/customers/add-customer/add-customer.component.css","./ClientApp/app/components/customers/add-customer/add-customer.component.html","./ClientApp/app/components/customers/add-customer/add-customer.component.ts","./ClientApp/app/components/customers/customer-details/customer-details.component.css","./ClientApp/app/components/customers/customer-details/customer-details.component.html","./ClientApp/app/components/customers/customer-details/customer-details.component.ts","./ClientApp/app/components/customers/customer-edit/customer-edit.component.css","./ClientApp/app/components/customers/customer-edit/customer-edit.component.html","./ClientApp/app/components/customers/customer-edit/customer-edit.component.ts","./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.css","./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.html","./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.ts","./ClientApp/app/components/customers/customer/customer.component.css","./ClientApp/app/components/customers/customer/customer.component.html","./ClientApp/app/components/customers/customer/customer.component.ts","./ClientApp/app/components/customers/customers-routing.module.ts","./ClientApp/app/components/customers/customers.module.ts","./ClientApp/app/components/customers/pipes/customer-search.pipe.ts","./ClientApp/app/components/email/customer-send-email/customer-send-email.component.css","./ClientApp/app/components/email/customer-send-email/customer-send-email.component.html","./ClientApp/app/components/email/customer-send-email/customer-send-email.component.ts","./ClientApp/app/components/invoices/invoice-details/invoice-details.component.css","./ClientApp/app/components/invoices/invoice-details/invoice-details.component.html","./ClientApp/app/components/invoices/invoice-details/invoice-details.component.ts","./ClientApp/app/components/invoices/invoice-edit/helpClasses/getting-form-data-operations.ts","./ClientApp/app/components/invoices/invoice-edit/helpClasses/invoice-form-operations.ts","./ClientApp/app/components/invoices/invoice-edit/helpClasses/price-calculation.ts","./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.css","./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.html","./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.ts","./ClientApp/app/components/invoices/invoice/invoice.component.css","./ClientApp/app/components/invoices/invoice/invoice.component.html","./ClientApp/app/components/invoices/invoice/invoice.component.ts","./ClientApp/app/components/invoices/invoices-routing.module.ts","./ClientApp/app/components/invoices/invoices.module.ts","./ClientApp/app/components/invoices/pipes/InvoiceNumberSearch.pipe.ts","./ClientApp/app/components/nav/nav.component.css","./ClientApp/app/components/nav/nav.component.html","./ClientApp/app/components/nav/nav.component.ts","./ClientApp/app/components/users/login/login.component.css","./ClientApp/app/components/users/login/login.component.html","./ClientApp/app/components/users/login/login.component.ts","./ClientApp/app/components/users/register/register.component.css","./ClientApp/app/components/users/register/register.component.html","./ClientApp/app/components/users/register/register.component.ts","./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.css","./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.html","./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.ts","./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.css","./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.html","./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.ts","./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.css","./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.html","./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.ts","./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.css","./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.html","./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.ts","./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.css","./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.html","./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.ts","./ClientApp/app/components/users/user-edit/user-edit.component.css","./ClientApp/app/components/users/user-edit/user-edit.component.html","./ClientApp/app/components/users/user-edit/user-edit.component.ts","./ClientApp/app/components/users/users-routing.module.ts","./ClientApp/app/components/users/users.module.ts","./ClientApp/app/enums/email-service-providers.enum.ts","./ClientApp/app/enums/tax-value.enum.ts","./ClientApp/app/models/auto-config.model.ts","./ClientApp/app/models/change-password.model.ts","./ClientApp/app/models/customer.model.ts","./ClientApp/app/models/email-message.model.ts","./ClientApp/app/models/invoice-item.model.ts","./ClientApp/app/models/invoice.model.ts","./ClientApp/app/models/login.model.ts","./ClientApp/app/models/register.model.ts","./ClientApp/app/models/smtp-configuration.model.ts","./ClientApp/app/models/token.model.ts","./ClientApp/app/models/user.model.ts","./ClientApp/app/pipes/currency.pipe.ts","./ClientApp/app/pipes/global-pipes-export.module.ts","./ClientApp/app/routing/routing.module.ts","./ClientApp/app/services/common.service.ts","./ClientApp/app/services/customer services/customer.http.services.ts","./ClientApp/app/services/customer services/customer.services.ts","./ClientApp/app/services/email service/email-http.service.ts","./ClientApp/app/services/email service/email.service.ts","./ClientApp/app/services/invoice services/invoice.http.services.ts","./ClientApp/app/services/invoice services/invoice.services.ts","./ClientApp/app/services/local authorization/can-activate-guard.service.ts","./ClientApp/app/services/user services/user.http.services.ts","./ClientApp/app/services/user services/user.services.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"../components/customers/customers.module\": [\n\t\t\"./ClientApp/app/components/customers/customers.module.ts\"\n\t],\n\t\"../components/invoices/invoices.module\": [\n\t\t\"./ClientApp/app/components/invoices/invoices.module.ts\"\n\t],\n\t\"../components/users/users.module\": [\n\t\t\"./ClientApp/app/components/users/users.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_lazy_route_resource lazy\n// module id = ./ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".footer {\\r\\n  position: absolute;\\r\\n  bottom: 5px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  height: 100vh;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.css\n// module id = ./ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<app-nav *ngIf=\\\"signedIn\\\"></app-nav>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { Invoice } from './models/invoice.model';\nimport { CustomerServices } from './services/customer services/customer.services';\nimport { InvoiceServices } from './services/invoice services/invoice.services';\nimport { UserServices } from './services/user services/user.services';\nimport { CommonService } from './services/common.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: []\n})\nexport class AppComponent implements OnInit {\n  title = 'Księgowość';\n  width = window.innerWidth;\n  signedIn:boolean;\n\n  constructor(private customerServices: CustomerServices, \n    private invoiceServices: InvoiceServices, \n    private userService: UserServices, \n    private commonData: CommonService){}\n  \n  ngOnInit(){\n    this.signedIn = this.userService.signedIn;\n    this.userService.signinStatusChanged.subscribe((value) => {\n      this.signedIn = value;\n      if(this.signedIn){\n        this.customerServices.SetCustomersHttp();\n        this.invoiceServices.SetInvoiceshttp();\n        this.userService.StartActiveTimer();\n      }\n      else{\n        this.invoiceServices.invoices = [];\n        this.customerServices.customers = [];\n      }\n    });\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { EmailHttpService } from './services/email service/email-http.service';\nimport { EmailService } from './services/email service/email.service';\n//#region import\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './components/nav/nav.component';\nimport { HttpClientModule } from '@angular/common/http'\nimport { RoutingModule } from './routing/routing.module';\n\nimport { CustomersModule } from './components/customers/customers.module';\nimport { InvoicesModule } from './components/invoices/invoices.module';\nimport { UsersModule } from './components/users/users.module';\n\nimport { CustomerServices } from './services/customer services/customer.services';\nimport { CustomerHttpServices } from './services/customer services/customer.http.services';\nimport { InvoiceServices } from './services/invoice services/invoice.services';\nimport { InvoiceHttpServices } from './services/invoice services/invoice.http.services';\nimport { UserServices } from './services/user services/user.services';\nimport { UserHttpServices } from './services/user services/user.http.services';\nimport { CommonService } from './services/common.service';\nimport { CanActivateGuard } from './services/local authorization/can-activate-guard.service';\n//#endregion\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CustomersModule,\n    InvoicesModule,\n    UsersModule,\n    RoutingModule,\n    HttpClientModule,\n  ],\n  providers: [\n    CommonService,\n    CustomerServices, \n    CustomerHttpServices, \n    InvoiceServices, \n    InvoiceHttpServices, \n    UserServices, \n    UserHttpServices,\n    CanActivateGuard,\n    EmailService,\n    EmailHttpService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","module.exports = \".center-panel{\\r\\n    width: 70%;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n}\\r\\n\\r\\ninput.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\\r\\n\\r\\ninput.ng-touched.ng-valid{\\r\\n  background-color: #b3ff99;\\r\\n  border: 2px solid #2db300;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/add-customer/add-customer.component.css\n// module id = ./ClientApp/app/components/customers/add-customer/add-customer.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-sm-12\\\">\\n  <div class=\\\"panel panel-default center-panel\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h2>Dodaj Nowego Klienta:</h2>\\n    </div>\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"AddCustomer()\\\" #AddCustomerForm=\\\"ngForm\\\">\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-3\\\">Nazwa:</label>\\n          <div class=\\\"col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customer.name\\\" name=\\\"Name\\\" #Name=\\\"ngModel\\\" required>\\n          </div>\\n          <div class=\\\"col-sm-3\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"!Name.valid && Name.touched\\\"> Proszę wpisać Nazwę firmy</small>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-3\\\">Miejscowość:</label>\\n          <div class=\\\"col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customer.city\\\" name=\\\"City\\\" #City=\\\"ngModel\\\" required>\\n          </div>\\n          <div class=\\\"col-sm-3\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"!City.valid && City.touched\\\"> Proszę wpisać Miasto</small>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-3\\\">Ulica:</label>\\n          <div class=\\\"col-sm-6\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customer.address\\\" name=\\\"Street\\\" #Street=\\\"ngModel\\\" required>\\n          </div>\\n          <div class=\\\"col-sm-3\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"!Street.valid && Street.touched\\\"> Proszę wpisać Ulicę</small>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-3\\\">Kod pocztowy:</label>\\n          <div class=\\\"col-sm-6\\\">\\n            <input \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\" \\n            [(ngModel)]=\\\"customer.postCode\\\" \\n            name=\\\"PostCode\\\" \\n            #PostCode=\\\"ngModel\\\" \\n            pattern=\\\"[0-9]{2}-[0-9]{3}\\\"\\n            required>\\n          </div>\\n          <div class=\\\"col-sm-3\\\">\\n            <small class=\\\"text-danger\\\" *ngIf=\\\"!PostCode.valid && PostCode.touched\\\"> Proszę wpisać kod pocztowy</small>\\n          </div>\\n        </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label col-sm-3\\\">Email:</label>\\n            <div class=\\\"col-sm-6\\\">\\n              <input \\n                class=\\\"form-control\\\" \\n                type=\\\"email\\\" \\n                id=\\\"email\\\" \\n                [(ngModel)]=\\\"customer.email\\\" \\n                name=\\\"email\\\" \\n                #EmailInput=\\\"ngModel\\\"/>\\n            </div>\\n            <div class=\\\"col-sm-3\\\">\\n              <small class=\\\"text-danger\\\" *ngIf=\\\"!EmailInput.valid && EmailInput.touched\\\">Proszę wprowadzić poprawny e-mail</small>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label col-sm-3\\\">NIP:</label>\\n            <div class=\\\"col-sm-6\\\">\\n              <input \\n              type=\\\"text\\\" class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"customer.nip\\\" name=\\\"NIP\\\" \\n              #NIP=\\\"ngModel\\\" required \\n              pattern=\\\"[0-9]{10}\\\"\\n              placeholder=\\\"format NIP: 1234567890\\\"\\n              maxlength=\\\"10\\\" minlength=\\\"10\\\">\\n            </div>\\n            <div class=\\\"col-sm-3\\\">\\n              <small class=\\\"text-danger\\\" *ngIf=\\\"!NIP.valid && NIP.touched\\\"> Proszę wpisać NIP</small>\\n            </div>\\n        </div>\\n        <div>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!AddCustomerForm.valid\\\">Dodaj klienta</button>\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\\"panel-footer\\\">\\n      <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/customer']\\\">Wróć do listy</button>\\n      <button class=\\\"btn btn-warning pull-right\\\" (click)=\\\"ResetCustomerForm()\\\">Wyczyść formularz</button>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/add-customer/add-customer.component.html\n// module id = ./ClientApp/app/components/customers/add-customer/add-customer.component.html\n// module chunks = main","\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Form, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Customer } from '../../../models/customer.model';\nimport { CustomerServices } from '../../../services/customer services/customer.services';\nimport { UserServices } from './../../../services/user services/user.services';\n\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n\n  @ViewChild('AddCustomerForm') AddCustomerForm: NgForm;\n  customer: Customer = new Customer();\n\n  constructor(private customerService: CustomerServices, private router: Router, private userService: UserServices) {\n    this.userService.CheckTokenExpired();\n   }\n\n  ngOnInit() {\n  }\n\n  AddCustomer(){\n    if(this.AddCustomerForm.valid){\n      this.customerService.AddCustomer(this.customer);\n      this.router.navigate(['/customer']);\n    }\n  }\n\n  ResetCustomerForm(){\n    this.AddCustomerForm.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/add-customer/add-customer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer-details/customer-details.component.css\n// module id = ./ClientApp/app/components/customers/customer-details/customer-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-sm-6\\\">\\n  <div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\"><h3>Dane klienta: </h3></div>\\n  <div class=\\\"panel-body\\\" style=\\\"font-size: 18px\\\">\\n    <p><b>Nazwa:</b> {{customer.name}}</p>\\n    <p><b>Miejscowość:</b> {{customer.city}}</p>\\n    <p><b>Kod pocztowy:</b> {{customer.postCode}}</p>\\n    <p><b>Email:</b> {{customer.email}}</p>\\n    <p><b>Ulica:</b> {{customer.address}}</p>\\n    <p><b>NIP:</b> {{customer.nip}}</p>\\n  </div>\\n  <div class=\\\"panel-footer\\\" style=\\\"min-height: 112px;\\\">\\n    <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/customer']\\\">Wróć do listy</a>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['edit']\\\" [queryParams]=\\\"{ nip: nip}\\\">Edytuj</a>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['invoices']\\\" [queryParams]=\\\"{ nip: nip}\\\">Zobacz faktury</a>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['email']\\\" [queryParams]=\\\"{ nip: nip}\\\">Wyślij wiadomość</a>\\n  </div>\\n</div>\\n</div>\\n<div class=\\\"col-sm-6\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer-details/customer-details.component.html\n// module id = ./ClientApp/app/components/customers/customer-details/customer-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Customer } from '../../../models/customer.model';\nimport { UserServices } from '../../../services/user services/user.services';\nimport { CustomerServices } from './../../../services/customer services/customer.services';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customer: Customer = new Customer();\n  nip: string;\n\n  constructor(private activeRoute: ActivatedRoute, private router: Router ,private customerService: CustomerServices, private userService: UserServices) {\n    this.userService.CheckTokenExpired();\n   }\n\n  ngOnInit() {\n    this.activeRoute.params.subscribe(\n      (params: Params) => {\n        this.nip = params['nip'];\n        if(this.customerService.GetCustomerByNip(this.nip) == undefined){\n          this.router.navigate(['/']);\n        }\n        else{\n          this.customer = this.customerService.GetCustomerByNip(this.nip);\n        }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/customer-details/customer-details.component.ts","module.exports = \"input.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer-edit/customer-edit.component.css\n// module id = ./ClientApp/app/components/customers/customer-edit/customer-edit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3>Panel edycji:</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        <form (ngSubmit)=\\\"UpdateCustomerData()\\\" #customerForm=\\\"ngForm\\\"> \\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"Name\\\" class=\\\"col-sm-2 col-form-label\\\">Nazwa</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input class=\\\"form-control\\\" id=\\\"Name\\\" [ngModel]=\\\"customer.name\\\" name=\\\"Name\\\" type=\\\"text\\\" #NameInput=\\\"ngModel\\\" required/>\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"!NameInput.valid && NameInput.touched\\\">Proszę wprowadzić nazwę firmy</small>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"City\\\"  class=\\\"col-sm-2 col-form-label\\\">Miasto</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input class=\\\"form-control\\\" id=\\\"City\\\" [ngModel]=\\\"customer.city\\\" name=\\\"City\\\" type=\\\"text\\\" #CityInput=\\\"ngModel\\\" required/>\\n                <small class=\\\"text-danger\\\" *ngIf=\\\"!CityInput.valid && CityInput.touched\\\">Proszę wprowadzić nazwę firmy</small>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"Street\\\"  class=\\\"col-sm-2 col-form-label\\\">Adres</label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input class=\\\"form-control\\\" id=\\\"Street\\\" [ngModel]=\\\"customer.address\\\" name=\\\"Street\\\" type=\\\"text\\\" #StreetInput=\\\"ngModel\\\" required/>\\n                  <small class=\\\"text-danger\\\" *ngIf=\\\"!StreetInput.valid && StreetInput.touched\\\">Proszę wprowadzić adres</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"PostCode\\\"  class=\\\"col-sm-2 col-form-label\\\">Kod Pocztowy</label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input class=\\\"form-control\\\" id=\\\"PostCode\\\" [ngModel]=\\\"customer.postCode\\\" name=\\\"PostCode\\\" type=\\\"text\\\" #PostCodeInput=\\\"ngModel\\\" required/>\\n                  <small class=\\\"text-danger\\\" *ngIf=\\\"!PostCodeInput.valid && PostCodeInput.touched\\\">Proszę wprowadzić kod pocztowy</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"PostCode\\\"  class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input class=\\\"form-control\\\" id=\\\"Email\\\" [ngModel]=\\\"customer.email\\\" name=\\\"Email\\\" type=\\\"email\\\" #EmailInput=\\\"ngModel\\\"/>\\n                  <small class=\\\"text-danger\\\" *ngIf=\\\"!EmailInput.valid && EmailInput.touched\\\">Proszę wprowadzić kod pocztowy</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"NIP\\\"  class=\\\"col-sm-2 col-form-label\\\">NIP</label>\\n                <div class=\\\"col-sm-10\\\">\\n                  <input class=\\\"form-control\\\" id=\\\"NIP\\\" [ngModel]=\\\"customer.nip\\\" name=\\\"NIP\\\" type=\\\"text\\\" #NipInput=\\\"ngModel\\\" required/>\\n                  <small class=\\\"text-danger\\\" *ngIf=\\\"!NipInput.valid && NipInput.touched\\\">Proszę wprowadzić poprawnyNIP</small>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!customerForm.valid\\\">Zapisz</button>\\n        </form>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer-edit/customer-edit.component.html\n// module id = ./ClientApp/app/components/customers/customer-edit/customer-edit.component.html\n// module chunks = main","import { NgForm } from '@angular/forms';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { Customer } from '../../../models/customer.model';\nimport { CustomerServices } from '../../../services/customer services/customer.services';\n\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.css']\n})\nexport class CustomerEditComponent implements OnInit {\n  nip:string;\n  customer: Customer;\n  @ViewChild('customerForm') editForm : NgForm\n\n  constructor(private activeRoute: ActivatedRoute, private customerService: CustomerServices, private router: Router) {\n    this.activeRoute.queryParams.subscribe(\n      params => {\n       this.nip = params['nip'];\n       this.customer = this.customerService.GetCustomerByNip(this.nip);\n      }\n    );\n   }\n\n  ngOnInit() {\n  }\n\n  UpdateCustomerData(){\n    this.customer.name = this.editForm.value.Name;\n    this.customer.city = this.editForm.value.City;\n    this.customer.address = this.editForm.value.Street;\n    this.customer.postCode = this.editForm.value.PostCode;\n    this.customer.email = this.editForm.value.Email;\n    this.customer.nip = this.editForm.value.NIP;\n    if(this.editForm.valid){\n      this.customerService.UpdateCustomer(this.customer);\n      this.router.navigate(['/customer']);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/customer-edit/customer-edit.component.ts","module.exports = \".table-striped tbody {\\r\\n  height: 250px;\\r\\n  overflow-y: auto;\\r\\n  width: 100%;\\r\\n}\\r\\n.table-striped thead, .table-striped tbody, .table-striped tr, .table-striped td, .table-striped th {\\r\\n  display: block;\\r\\n}\\r\\n.table-striped tbody td, .table-striped thead > tr> td {\\r\\n  float: left;\\r\\n  border-bottom-width: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.css\n// module id = ./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <h3>Faktury:</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <table class=\\\"table table-striped table-hover\\\" style=\\\"text-align: center;\\\">\\n      <thead class=\\\"bg-primary col-sm-12\\\">\\n        <tr>\\n          <td class=\\\"col-sm-3\\\">Numer faktury:</td>\\n          <td class=\\\"col-sm-2\\\">Kwota:</td>\\n          <td class=\\\"col-sm-3\\\">Data wystawienia:</td>\\n          <td class=\\\"col-sm-2\\\">Termin Płatności:</td>\\n          <td class=\\\"col-sm-2\\\">Rozliczony:</td>\\n        </tr>\\n      </thead>\\n      <tbody>\\n         <tr *ngFor=\\\"let invoice of invoices;\\\">\\n            <td class=\\\"col-sm-3\\\">\\n              <a [routerLink]=\\\"['/invoice/details']\\\" [queryParams]=\\\"{number: invoice['invoiceNumber']}\\\">\\n                {{invoice.invoiceNumber}}/{{invoice.invoiceDate | date:'yyyy'}}\\n              </a>\\n            </td>\\n            <td class=\\\"col-sm-2\\\">{{invoice.itemsPriceTotal | currencyPipe}} zł</td>\\n            <td class=\\\"col-sm-3\\\">{{invoice.invoiceDate | date:'dd.MM.yyyy'}}</td>\\n            <td class=\\\"col-sm-2\\\">{{invoice.paymentDate | date:'dd.MM.yyyy'}}</td>\\n            <td class=\\\"col-sm-2\\\">\\n              <span class=\\\"glyphicon glyphicon-ok\\\" *ngIf=\\\"invoice.accounted;\\\"></span>\\n              <span *ngIf=\\\"!invoice.accounted;\\\">\\n                <input type=\\\"checkbox\\\" (click)=\\\"AddToAccountedList($event, invoice.invoiceNumber);\\\">\\n              </span>\\n            </td>\\n          </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"panel-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"setteledInvoices.length == 0\\\" (click)=\\\"SettleInvoices();\\\">Rozlicz zaznaczone</button>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.html\n// module id = ./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.html\n// module chunks = main","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Invoice } from './../../../models/invoice.model';\nimport { Customer } from '../../../models/customer.model';\nimport { CustomerServices } from './../../../services/customer services/customer.services';\nimport { InvoiceServices } from '../../../services/invoice services/invoice.services';\n\n@Component({\n  selector: 'app-customer-invoices',\n  templateUrl: './customer-invoices.component.html',\n  styleUrls: ['./customer-invoices.component.css']\n})\nexport class CustomerInvoicesComponent implements OnInit {\n\n  constructor(private customerService: CustomerServices, private invoiceService: InvoiceServices, private activeRoute: ActivatedRoute) { }\n\n  customer: Customer = new Customer();\n  invoices: Invoice[] = [];\n  nip: string;\n  setteledInvoices: number[] = [];\n\n  ngOnInit() {\n    this.activeRoute.queryParams.subscribe(\n      params => {\n       this.nip = params['nip'];\n       this.customer = this.customerService.GetCustomerByNip(this.nip);\n       this.invoices = this.invoiceService.invoices.filter(i => {return i.customer.nip == this.nip});\n      }\n    );\n  }\n\n  AddToAccountedList(event, invoiceNumber: number){\n    let index = this.setteledInvoices.indexOf(invoiceNumber);\n    if(event.target.checked){\n      if(index == -1)\n        this.setteledInvoices.push(invoiceNumber);\n    }\n    else{\n      if(index != -1)\n        this.setteledInvoices.splice(index, 1);\n    }\n  }\n\n  SettleInvoices(){\n    this.invoiceService.SettleInvoices(this.setteledInvoices, this.nip);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/customer-invoices/customer-invoices.component.ts","module.exports = \".sortButtons:hover{\\r\\n  background: #4285F4;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.table-striped tbody {\\r\\n  height: 400px;\\r\\n  overflow-y: auto;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.table-striped thead, .table-striped tbody, .table-striped tr, .table-striped td, .table-striped th {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.table-striped tbody td, .table-striped thead > tr> td {\\r\\n  float: left;\\r\\n  border-bottom-width: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer/customer.component.css\n// module id = ./ClientApp/app/components/customers/customer/customer.component.css\n// module chunks = main","module.exports = \"<div>\\n  <div>\\n    <h2>Baza klientów:</h2>\\n    <hr/>\\n  </div>\\n  <div class=\\\"col-xs-6\\\" style=\\\"margin-bottom: 20px;\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"wyszukaj po NIP lub nazwie klienta\\\" [(ngModel)]=\\\"searchParam\\\"/>\\n  </div>\\n  <div class=\\\"col-xs-3\\\">\\n      <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['add']\\\">Dodaj Nowego Klienta</button>\\n  </div>\\n  <div>\\n    <table class=\\\"table table-striped\\\">\\n      <thead class=\\\"bg-primary col-sm-12\\\">\\n        <tr>\\n          <td class=\\\"sortButtons col-sm-4\\\" (click)=\\\"SortCustomers('name')\\\">\\n            <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" *ngIf=\\\"!orderDescending\\\"></span>\\n            <span class=\\\"glyphicon glyphicon-triangle-top\\\" *ngIf=\\\"orderDescending\\\"></span>\\n            Nazwa:\\n          </td>\\n          <td class=\\\"sortButtons col-sm-3\\\" (click)=\\\"SortCustomers('address')\\\">\\n            <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" *ngIf=\\\"!orderDescending\\\"></span>\\n            <span class=\\\"glyphicon glyphicon-triangle-top\\\" *ngIf=\\\"orderDescending\\\"></span>\\n            Adres:\\n          </td>\\n          <td class=\\\"sortButtons col-sm-3\\\" (click)=\\\"SortCustomers('city')\\\">\\n            <span class=\\\"glyphicon glyphicon-triangle-bottom\\\" *ngIf=\\\"!orderDescending\\\"></span>\\n            <span class=\\\"glyphicon glyphicon-triangle-top\\\" *ngIf=\\\"orderDescending\\\"></span>  \\n            Miasto:\\n          </td>\\n          <td class=\\\"col-sm-2\\\">NIP:</td>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr \\n          *ngFor=\\\"let customer of customers | customerSearch: searchParam;\\\"\\n          (click)=\\\"NavigateToDetails(customer['nip'])\\\"\\n          style=\\\"cursor:pointer;\\\"\\n          >\\n          <td class=\\\"col-sm-4\\\">{{customer.name}}</td>\\n          <td class=\\\"col-sm-3\\\">{{customer.address}}</td>\\n          <td class=\\\"col-sm-3\\\">{{customer.city}}</td>\\n          <td class=\\\"col-sm-2\\\">{{customer.nip}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/customers/customer/customer.component.html\n// module id = ./ClientApp/app/components/customers/customer/customer.component.html\n// module chunks = main","import { Component, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Customer } from '../../../models/customer.model';\nimport { CustomerServices } from '../../../services/customer services/customer.services';\nimport { CustomerHttpServices } from '../../../services/customer services/customer.http.services';\nimport { UserServices } from './../../../services/user services/user.services';\n\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit{\n  customers: Customer[] = [];\n  searchParam: string = '';\n  orderDescending: boolean = false;\n\n  constructor(private customerService: CustomerServices, private router: Router, private userService: UserServices) {\n\n    this.customers = this.customerService.customers;\n\n    if(this.userService.userInactive){\n      this.userService.CheckTokenExpired();\n      this.userService.ResetActiveTimer();\n    }\n  }\n  \n  ngOnInit() {\n    this.customerService.customersChanged.subscribe(\n      (customers) => {\n        this.customers = customers;\n      });\n  }\n\n  SortCustomers(sortParam: string){\n    if(this.orderDescending){\n      this.customers = this.customers.sort((a, b) => {\n        if (a[sortParam] < b[sortParam])\n          return 1;\n        if (a[sortParam] > b[sortParam])\n          return -1;\n        return 0;\n      });\n      this.orderDescending = !this.orderDescending;\n    }\n    else{\n      this.customers = this.customers.sort((a, b) => {\n        if (a[sortParam] < b[sortParam])\n          return -1;\n        if (a[sortParam] > b[sortParam])\n          return 1;\n      });\n      this.orderDescending = !this.orderDescending;\n    }\n  }\n\n  NavigateToDetails(nip: string){\n    this.router.navigate(['customer/details', nip]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/customer/customer.component.ts","\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { CustomerComponent } from \"./customer/customer.component\";\r\nimport { AddCustomerComponent } from \"./add-customer/add-customer.component\";\r\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\r\nimport { CustomerEditComponent } from \"./customer-edit/customer-edit.component\";\r\nimport { CustomerInvoicesComponent } from './customer-invoices/customer-invoices.component';\r\nimport { CanActivateGuard } from \"../../services/local authorization/can-activate-guard.service\";\r\nimport { CustomerSendEmailComponent } from \"../email/customer-send-email/customer-send-email.component\";\r\n\r\nconst customersRouting: Routes = [\r\n    {path: 'customer', component: CustomerComponent, canActivate: [CanActivateGuard]},\r\n    {path: 'customer/add', component: AddCustomerComponent, canActivate: [CanActivateGuard]},\r\n    {path: 'customer/details/:nip', component: CustomerDetailsComponent,children:[\r\n      {path: 'edit', component: CustomerEditComponent, canActivate: [CanActivateGuard]},\r\n      {path: 'invoices', component: CustomerInvoicesComponent, canActivate: [CanActivateGuard]},\r\n      {path: 'email', component: CustomerSendEmailComponent, canActivate: [CanActivateGuard]},\r\n    ], canActivate: [CanActivateGuard]},\r\n]\r\n\r\n@NgModule({\r\n  imports:[\r\n    RouterModule.forChild(customersRouting)\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class CustomersRoutingModule{}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/customers-routing.module.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CustomersRoutingModule } from './customers-routing.module';\r\nimport { RoutingModule } from './../../routing/routing.module';\r\n\r\nimport { CustomerComponent } from \"./customer/customer.component\";\r\nimport { AddCustomerComponent } from \"./add-customer/add-customer.component\";\r\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\r\nimport { CustomerEditComponent } from \"./customer-edit/customer-edit.component\";\r\nimport { CustomerSearchPipe } from \"./pipes/customer-search.pipe\";\r\nimport { CustomerInvoicesComponent } from './customer-invoices/customer-invoices.component';\r\nimport { GlobalPipesExportModule } from './../../pipes/global-pipes-export.module';\r\nimport { CustomerSendEmailComponent } from \"../email/customer-send-email/customer-send-email.component\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomerSearchPipe,\r\n    CustomerComponent,\r\n    AddCustomerComponent,\r\n    CustomerDetailsComponent,\r\n    CustomerEditComponent,\r\n    CustomerInvoicesComponent,\r\n    CustomerSendEmailComponent\r\n],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CustomersRoutingModule,\r\n    GlobalPipesExportModule\r\n  ]\r\n})\r\nexport class CustomersModule{\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/customers.module.ts","import { Customer } from './../../../models/customer.model';\nimport { Pipe, PipeTransform, ElementRef } from '@angular/core';\n\n@Pipe({\n  name: 'customerSearch'\n})\nexport class CustomerSearchPipe implements PipeTransform {\n\n  transform(customerArray: Customer[], param: string){\n    if(param != '')\n      return customerArray.filter(c => c.name.toLowerCase().includes(param.toString().toLowerCase()) || c.nip.toLowerCase().includes(param.toString().toLowerCase()))\n    return customerArray;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/customers/pipes/customer-search.pipe.ts","module.exports = \"textarea {\\r\\n  resize: none;\\r\\n}\\r\\n\\r\\ninput.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/email/customer-send-email/customer-send-email.component.css\n// module id = ./ClientApp/app/components/email/customer-send-email/customer-send-email.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3>Wysyłanie wiadomości</h3>\\n  </div>\\n  <form #emailForm=\\\"ngForm\\\" (ngSubmit)=\\\"SendMessage();\\\">\\n    <div class=\\\"panel-body\\\">\\n\\n      <div class=\\\"form-group row col-sm-12\\\">\\n        <label for=\\\"email\\\"  class=\\\"col-sm-2 col-form-label\\\">Odbiorca:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input class=\\\"form-control\\\" \\n          [(ngModel)]=\\\"message.receiver\\\" \\n          name=\\\"email\\\" \\n          type=\\\"email\\\" \\n          #email=\\\"ngModel\\\" \\n          required \\n          pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"/>\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">Proszę wprowadzić odbiorcę</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-12\\\"><hr></div>\\n\\n      <div class=\\\"form-group row col-sm-12\\\">\\n        <label for=\\\"subject\\\"  class=\\\"col-sm-2 col-form-label\\\">Temat:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input class=\\\"form-control\\\" id=\\\"subject\\\" [(ngModel)]=\\\"message.subject\\\" name=\\\"subject\\\" type=\\\"text\\\" #subject=\\\"ngModel\\\" required/>\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"!email.valid && email.touched\\\">Proszę podać temat</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12\\\">\\n        <textarea rows=\\\"7\\\" \\n        class=\\\"form-control col-sm-12\\\" \\n        [(ngModel)]=\\\"message.messageBody\\\" \\n        name=\\\"messageBody\\\" \\n        #messageBody=\\\"ngModel\\\"\\n        required \\n        placeholder=\\\"treść\\\"></textarea>\\n        <small class=\\\"text-danger\\\" *ngIf=\\\"!messageBody.valid && messageBody.touched\\\">Proszę wprowadzić treść</small>\\n      </div>\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!emailForm.valid\\\">Wyślij</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n\\n\\n\\n\\n  \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/email/customer-send-email/customer-send-email.component.html\n// module id = ./ClientApp/app/components/email/customer-send-email/customer-send-email.component.html\n// module chunks = main","import { OnInit, Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Customer } from './../../../models/customer.model';\nimport { EmailMessageModel } from './../../../models/email-message.model';\nimport { CustomerServices } from './../../../services/customer services/customer.services';\nimport { EmailService } from './../../../services/email service/email.service';\n\n\n@Component({\n  selector: 'app-customer-send-email',\n  templateUrl: './customer-send-email.component.html',\n  styleUrls: ['./customer-send-email.component.css']\n})\nexport class CustomerSendEmailComponent implements OnInit {\n\n  customer: Customer = new Customer();\n  message: EmailMessageModel = new EmailMessageModel();\n\n  constructor(private activRoute: ActivatedRoute,private location: Location, private customerService: CustomerServices, private emailService: EmailService) { }\n\n  ngOnInit() {\n\n    this.activRoute.queryParams.subscribe(\n      (param) => {\n        let nip = param['nip'];\n        if(nip != null && nip != undefined)\n          this.customer = this.customerService.GetCustomerByNip(nip);\n        if(this.customer != null){\n          this.message.receiver = this.customer.email;\n        }\n      }\n    );\n  }\n\n  SendMessage(){\n    this.emailService.SendMessage(this.message);\n    this.location.back();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/email/customer-send-email/customer-send-email.component.ts","module.exports = \".signature-element{\\r\\n  margin-top: 40px;\\r\\n  border: 5px solid black;\\r\\n  min-height: 40px;\\r\\n  height: 40px;\\r\\n  min-width: 100px;\\r\\n  width: 100px;\\r\\n  text-align: center;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/invoices/invoice-details/invoice-details.component.css\n// module id = ./ClientApp/app/components/invoices/invoice-details/invoice-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-sm-12\\\">\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h2>Faktura nr {{invoice.invoiceNumber}}/{{invoice.invoiceDate | date:'yyyy'}}</h2>\\n    </div>\\n    <div class=\\\"panel-body\\\" id=\\\"invoiceContent\\\" #invoiceContent style=\\\"background-color: white;\\\">\\n      <div class=\\\"col-sm-12\\\"><br></div>\\n      <div class=\\\"col-sm-6\\\">\\n        <strong>Data wystawnienia: {{invoice.invoiceDate | date:'dd-MM-yyyy'}}</strong>\\n        <h3>Nabywca:</h3>\\n        <p>{{invoice.customer.name}}</p>\\n        <p>{{invoice.customer.postCode}} {{invoice.customer.city}}</p>\\n        <p>{{invoice.customer.address}}</p>\\n        <p>NIP: {{invoice.customer.nip}}</p>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"pull-right\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <br>\\n            <h3>Sprzedawca:</h3>\\n            <p>{{user.name}}</p>\\n            <p>{{user.postCode}} {{user.city}}</p>\\n            <p>{{user.address}}</p>\\n            <p>NIP: {{user.nip}}</p>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-12\\\" style=\\\"margin-top: 30px; margin-bottom: 40px; text-align: center;\\\">\\n          <h3>FV {{invoice.invoiceNumber}}/{{invoice.invoiceDate | date:'yyyy'}}</h3>\\n      </div>\\n      <table class=\\\"table table-bordered col-sm-12\\\" style=\\\"text-align: center;\\\">\\n        <thead>\\n          <tr>\\n            <td>Nazwa:</td>\\n            <td>Jednostkowa cena netto:</td>\\n            <td>Ilość:</td>\\n            <td>Całkowita cena netto:</td>\\n            <td>Stawka podatku:</td>\\n            <td>Cena brutto:</td>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of invoice.invoiceItems\\\">\\n            <td>{{item.name}}</td>\\n            <td>{{item.unitPriceWithoutTax | currencyPipe}}</td>\\n            <td>{{item.amount}}</td>\\n            <td>{{item.totalPriceWithoutTax | currencyPipe}}</td>\\n            <td>{{item.tax}}%</td>\\n            <td>{{item.totalPriceWithTax | currencyPipe}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <div class=\\\"col-sm-6\\\">\\n        <h3>Do zapłaty: {{invoice.itemsPriceTotal | currencyPipe}} zł</h3>\\n        <p>Sposób płatności: {{invoice.paymentType}}</p>\\n        <p>Termin płatności: {{invoice.paymentDate | date:'dd-MM-yyyy'}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" [routerLink]=\\\"['/']\\\">Wróć do listy</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/invoice/edit', invoiceNumber]\\\">Edytuj</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteInvoice()\\\" title=\\\"Można usunąć tylko ostatnią fakturę\\\">Usuń</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"GeneratePDF()\\\">Drukuj PDF</button>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/invoices/invoice-details/invoice-details.component.html\n// module id = ./ClientApp/app/components/invoices/invoice-details/invoice-details.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Invoice } from '../../../models/invoice.model';\nimport { InvoiceServices } from '../../../services/invoice services/invoice.services';\nimport { UserServices } from './../../../services/user services/user.services';\nimport { UserModel } from './../../../models/user.model';\nimport * as jsPDF from 'jspdf';\n\n\n@Component({\n  selector: 'app-invoice-details',\n  templateUrl: './invoice-details.component.html',\n  styleUrls: ['./invoice-details.component.css']\n})\nexport class InvoiceDetailsComponent implements OnInit {\n\n  invoice:Invoice;\n  invoiceNumber:number;\n  user: UserModel = new UserModel();\n  @ViewChild('invoiceContent') invoiceContent: ElementRef;\n\n  constructor(private activRoute: ActivatedRoute,private router: Router, private invoiceService: InvoiceServices, private userService: UserServices) {\n    this.userService.CheckTokenExpired();\n    this.user = this.userService.userData;\n   }\n\n  \n   ngOnInit() {\n    this.activRoute.queryParams.subscribe(\n      (params: Params) => {\n        this.invoiceNumber = +params['number'];\n        this.invoice = this.invoiceService.GetInvoiceByNumber(this.invoiceNumber)\n        if(this.invoice == null){\n          alert(\"Nie można znaleść faktury, prosze spróbować ponownie\");\n          this.router.navigate(['/invoice']);\n        }\n      });\n  }\n\n  DeleteInvoice(){\n    this.invoiceService.DeleteInvoice(this.invoiceNumber);\n    this.router.navigate(['/']);\n  }\n\n  GeneratePDF(){\n    var signatureElement = document.createElement('div');\n    signatureElement.classList.add('col-sm-6');\n    signatureElement.innerHTML = '<div class=\"col-sm-4 signature-element pull-right\" ><h4>Wystawił</h4><br><br><p>...................</p></div>'\n    this.invoiceContent.nativeElement.appendChild(signatureElement);\n\n    let doc = new jsPDF('p','mm','a4');\n    doc.addHTML(this.invoiceContent.nativeElement, () =>{\n      doc.save('Faktura_nr_'+this.invoice.invoiceNumber+'.pdf');\n    });\n\n    setTimeout(()=>{\n      this.invoiceContent.nativeElement.removeChild(signatureElement);\n    }, 10);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoice-details/invoice-details.component.ts","import { FormArray, FormGroup } from '@angular/forms';\r\nimport { InvoiceItem } from '../../../../models/invoice-item.model';\r\nimport { Customer } from '../../../../models/customer.model';\r\n\r\n\r\nexport class GettingFormDataOperations{\r\n  \r\n  getCustomerData(invoiceForm: FormGroup, customer: Customer){\r\n    customer.name = invoiceForm.value.customerName;\r\n    customer.city = invoiceForm.value.customerCity;\r\n    customer.postCode = invoiceForm.value.customerPostCode;\r\n    customer.address = invoiceForm.value.customerStreet;\r\n    customer.nip = invoiceForm.value.customerNIP;\r\n  }\r\n\r\n  getInvoiceItems(invoiceForm: FormGroup, invoiceItems: InvoiceItem[]){\r\n    let formInvoicItems: FormArray = <FormArray>invoiceForm.get('invoiceItems');\r\n    let invoiceItem: InvoiceItem;\r\n\r\n    for(let formInvoicItem of formInvoicItems.value){\r\n      invoiceItem = new InvoiceItem();\r\n      invoiceItem.name = formInvoicItem.itemName;\r\n      invoiceItem.amount = formInvoicItem.itemAmount;\r\n      invoiceItem.tax = formInvoicItem.itemTax;\r\n      invoiceItem.unitPriceWithoutTax = formInvoicItem.itemUnitPriceWithoutTax;\r\n      invoiceItem.totalPriceWithoutTax = formInvoicItem.itemTotalPriceWithoutTax;\r\n      invoiceItem.totalPriceWithTax = formInvoicItem.itemTotalPriceWithTax;\r\n\r\n      if(invoiceItem != undefined){\r\n        invoiceItems.push(invoiceItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  getPaymentDate(invoiceForm: FormGroup){\r\n    return invoiceForm.value.paymentDate;\r\n  }\r\n\r\n  getPaymentType(invoiceForm: FormGroup){\r\n    return invoiceForm.value.paymentType;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoice-edit/helpClasses/getting-form-data-operations.ts","import { InvoiceItem } from './../../../../models/invoice-item.model';\r\nimport { FormGroup, FormControl,FormArray, Validators } from \"@angular/forms\";\r\nimport { Invoice } from \"../../../../models/invoice.model\";\r\n\r\nexport class InvoiceFormOperations{\r\n\r\n  ClearInvoiceFormArray(invoiceForm: FormGroup){\r\n    let arrayLength = (<FormArray>invoiceForm.get('invoiceItems')).length\r\n    for(let i = arrayLength; i > 0; i--){\r\n      (<FormArray>invoiceForm.get('invoiceItems')).removeAt(i);\r\n    }\r\n  }\r\n\r\n  AddItemRow(invoiceForm: FormGroup){\r\n    let newRow = new FormGroup({\r\n      'itemName': new FormControl(null, Validators.required),\r\n      'itemAmount': new FormControl(1, [Validators.required,Validators.min(1)]),\r\n      'itemTax': new FormControl(23, Validators.required),\r\n      'itemUnitPriceWithoutTax': new FormControl(0, Validators.required),\r\n      'itemTotalPriceWithoutTax': new FormControl(0, Validators.required),\r\n      'itemTotalPriceWithTax': new FormControl(0, Validators.required),\r\n    });\r\n    (<FormArray>invoiceForm.get('invoiceItems')).push(newRow);\r\n  }\r\n\r\n  RemoveItemRow(invoiceForm: FormGroup, index: number){\r\n    (<FormArray>invoiceForm.get('invoiceItems')).removeAt(index);\r\n  }\r\n\r\n  InitializeFormArray(invoiceItems: FormArray, editMode: boolean, invoice: Invoice){\r\n         \r\n    if(editMode){\r\n      for(let item of invoice['invoiceItems']){\r\n        let inoviceItem = new FormGroup({\r\n          'itemName': new FormControl(item['name'], Validators.required),\r\n          'itemAmount': new FormControl(item['amount'], [Validators.required,Validators.min(1)]),\r\n          'itemTax': new FormControl(item['tax'], Validators.required),\r\n          'itemUnitPriceWithoutTax': new FormControl(item['unitPriceWithoutTax'], Validators.required),\r\n          'itemTotalPriceWithoutTax': new FormControl(item['totalPriceWithoutTax'], Validators.required),\r\n          'itemTotalPriceWithTax': new FormControl(item['totalPriceWithTax'], Validators.required),\r\n        });\r\n        invoiceItems.push(inoviceItem);\r\n      }\r\n    }\r\n    else{    \r\n      let inoviceItem = new FormGroup({\r\n        'itemName': new FormControl(null, Validators.required),\r\n        'itemAmount': new FormControl(1, [Validators.required,Validators.min(1)]),\r\n        'itemTax': new FormControl(23, Validators.required),\r\n        'itemUnitPriceWithoutTax': new FormControl(0, Validators.required),\r\n        'itemTotalPriceWithoutTax': new FormControl(0, Validators.required),\r\n        'itemTotalPriceWithTax': new FormControl(0, Validators.required),\r\n        });\r\n\r\n\r\n      invoiceItems.push(inoviceItem);\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoice-edit/helpClasses/invoice-form-operations.ts","import { FormGroup } from '@angular/forms';\r\n\r\nexport class PriceCalculation{\r\n\r\n  calculateUnitPriceWithoutTax(formGroup: FormGroup, changedValue: string){\r\n    switch(changedValue){\r\n      case \"itemTotalPriceWithoutTax\":{\r\n        let priceWithoutTax = formGroup.value.itemTotalPriceWithoutTax;\r\n        let itemAmount = formGroup.value.itemAmount;\r\n        let newUnitPrice = (priceWithoutTax / itemAmount).toFixed(2);\r\n\r\n        formGroup.patchValue({\r\n          itemUnitPriceWithoutTax: newUnitPrice\r\n        });\r\n        break;\r\n      }\r\n      case \"itemTotalPriceWithTax\":{\r\n        let TotalPriceWithTax = formGroup.value.itemTotalPriceWithTax;\r\n        let itemAmount = formGroup.value.itemAmount;\r\n        let tax = formGroup.value.itemTax;\r\n        let newUnitPrice = ((TotalPriceWithTax / (1 + (tax / 100))) / itemAmount).toFixed(2);\r\n\r\n        formGroup.patchValue({\r\n          itemUnitPriceWithoutTax: newUnitPrice\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateTotalPriceWithoutTax(formGroup: FormGroup, changedValue: string){\r\n    switch(changedValue){\r\n      case \"itemAmount\":\r\n      case \"UnitPriceWithoutTax\":{     \r\n        let unitPrice = formGroup.value.itemUnitPriceWithoutTax; \r\n        let itemAmount = formGroup.value.itemAmount;       \r\n        let newTotalPriceWithoutTax = (unitPrice * itemAmount).toFixed(2);\r\n\r\n        formGroup.patchValue({\r\n          itemTotalPriceWithoutTax: newTotalPriceWithoutTax\r\n        });\r\n        break;\r\n      }\r\n      case \"itemTotalPriceWithTax\":{       \r\n        let TotalPriceWithTax = formGroup.value.itemTotalPriceWithTax;\r\n        let tax = formGroup.value.itemTax;\r\n        let newTotalPriceWithoutTax = (TotalPriceWithTax / (1 + (tax / 100))).toFixed(2);\r\n\r\n        formGroup.patchValue({\r\n          itemTotalPriceWithoutTax: newTotalPriceWithoutTax\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateTotalPriceWithTax(formGroup: FormGroup, changedValue: string){\r\n    switch(changedValue){\r\n      case \"UnitPriceWithoutTax\":\r\n      case \"itemAmount\":{\r\n        let unitPrice = formGroup.value.itemUnitPriceWithoutTax;\r\n        let itemAmount = formGroup.value.itemAmount;\r\n        let tax = formGroup.value.itemTax;\r\n        let newTotalPriceWithTax = ((unitPrice * itemAmount) * (1 + (tax / 100))).toFixed(2);\r\n        \r\n        formGroup.patchValue({\r\n          itemTotalPriceWithTax: newTotalPriceWithTax\r\n        });\r\n        break;\r\n      }\r\n      case \"itemTax\":\r\n      case \"itemTotalPriceWithoutTax\":{\r\n        let priceWithoutTax = formGroup.value.itemTotalPriceWithoutTax;\r\n        let tax = formGroup.value.itemTax;\r\n        let newTotalPriceWithTax = (priceWithoutTax * (1 + (tax / 100))).toFixed(2);\r\n        \r\n        formGroup.patchValue({\r\n          itemTotalPriceWithTax: newTotalPriceWithTax\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSum(formGroup: FormGroup){\r\n    let itemsArray = formGroup.get('invoiceItems').value;\r\n    let sum = 0;\r\n    for(let item of itemsArray){\r\n      sum += Number(item.itemTotalPriceWithTax);\r\n    }\r\n\r\n    return Number(sum.toFixed(2));\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoice-edit/helpClasses/price-calculation.ts","module.exports = \"input.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\\r\\n\\r\\n.autocomplete-dropdown-list{\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    max-height: 100px;\\r\\n    overflow-y: auto;\\r\\n    background-color: white;\\r\\n    -webkit-transition: none;\\r\\n    transition: none;\\r\\n}\\r\\n\\r\\n.autocomplete-dropdown-item {\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n.autocomplete-dropdown-item:hover{\\r\\n  background: lightgray;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.css\n// module id = ./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-sm-12\\\">\\n  <h2>{{title}}</h2>\\n  <hr/>\\n</div>\\n<div>\\n  <form [formGroup]=\\\"invoiceForm\\\" (ngSubmit)=\\\"SubmitInvoice()\\\" class=\\\"col-sm-12\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"form-gropu row\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"customerName\\\">Nazwa:</label>\\n        <div class=\\\"col-sm-7\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"customerName\\\" id=\\\"customerName\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"autocomplete-dropdown-list col-sm-12\\\" *ngIf=\\\"!selected\\\">\\n              <div style=\\\"cursor: pointer\\\" *ngFor=\\\"let name of filteredResult | async;\\\" (click)=\\\"AutocompleteForm(name)\\\" class=\\\"autocomplete-dropdown-item\\\">\\n                {{name}}\\n              </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <small class=\\\"text-danger\\\" \\n            *ngIf=\\\"!invoiceForm.get('customerName').valid && invoiceForm.get('customerName').touched\\\"\\n            >Proszę podać nazwę</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-gropu row\\\" style=\\\"margin-top: 10px;\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"customerCity\\\">Miejscowość:</label>\\n        <div class=\\\"col-sm-7\\\">\\n          <input formControlName=\\\"customerCity\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"customerCity\\\"  placeholder=\\\"Miejscowość\\\" autocomplete=\\\"off\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <small class=\\\"text-danger\\\" \\n            *ngIf=\\\"!invoiceForm.get('customerCity').valid && invoiceForm.get('customerCity').touched\\\"\\n            >Proszę podać miejscowość</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-gropu row\\\" style=\\\"margin-top: 10px;\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"customerPostCode\\\">Kod poczotwy:</label>\\n        <div class=\\\"col-sm-7\\\">\\n          <input formControlName=\\\"customerPostCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"customerPostCode\\\"  placeholder=\\\"Kod pocztowy\\\" autocomplete=\\\"off\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <small class=\\\"text-danger\\\"\\n           *ngIf=\\\"!invoiceForm.get('customerPostCode').valid && invoiceForm.get('customerPostCode').touched\\\"\\n           >Prosze podać kod pocztowy</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-gropu row\\\" style=\\\"margin-top: 10px;\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"customerStreet\\\">Adres:</label>\\n        <div class=\\\"col-sm-7\\\">\\n          <input formControlName=\\\"customerStreet\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"customerStreet\\\"  placeholder=\\\"Adres\\\" autocomplete=\\\"off\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <small class=\\\"text-danger\\\"\\n            *ngIf=\\\"!invoiceForm.get('customerStreet').valid && invoiceForm.get('customerStreet').touched\\\"\\n            >Prosze podać adres</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-gropu row\\\" style=\\\"margin-top: 10px;\\\">\\n        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"customerNIP\\\">NIP:</label>\\n        <div class=\\\"col-sm-7\\\">\\n          <input formControlName=\\\"customerNIP\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"customerNIP\\\" maxlength=\\\"10\\\" placeholder=\\\"format NIP: 1234567890\\\" autocomplete=\\\"off\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <small class=\\\"text-danger\\\"\\n            *ngIf=\\\"!invoiceForm.get('customerNIP').valid && invoiceForm.get('customerNIP').touched\\\"\\n            >Proszę podać poprawny NIP</small>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12\\\" style=\\\"margin-top: 20px;\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <td>Nazwa:</td>\\n            <td>Cena jenostkowa netto:</td>\\n            <td>Ilość:</td>\\n            <td>Stawka podatku:</td>\\n            <td>Całkowita cena netto:</td>\\n            <td>Całkowita cena brutto:</td>\\n            <td>Usuń:</td>\\n          </tr>\\n        </thead>\\n        <tbody formArrayName=\\\"invoiceItems\\\">\\n          <tr *ngFor=\\\"let invoiceItem of invoiceForm.get('invoiceItems')['controls']; let i=index;\\\" [formGroupName]=\\\"i\\\">\\n            <td><input \\n                  class=\\\"form-control\\\" \\n                  type=\\\"text\\\" \\n                  formControlName=\\\"itemName\\\"></td>\\n            <td><input class=\\\"form-control\\\" \\n                  type=\\\"number\\\" \\n                  formControlName=\\\"itemUnitPriceWithoutTax\\\" \\n                  (blur)=\\\"ItemUnitPriceWithoutTaxChanged(invoiceItem)\\\"></td>\\n            <td><input \\n                  class=\\\"form-control\\\" \\n                  type=\\\"number\\\" \\n                  formControlName=\\\"itemAmount\\\" \\n                  (blur)=\\\"ItemAmountChanged(invoiceItem)\\\"></td>\\n            <td>\\n              <select \\n                class=\\\"form-control\\\" \\n                type=\\\"number\\\" \\n                formControlName=\\\"itemTax\\\"\\n                (change)=\\\"ItemTaxChanged(invoiceItem)\\\">\\n                <option *ngFor=\\\"let tax of taxValues['values'];\\\" value=\\\"{{tax}}\\\">{{tax}}</option>\\n              </select>\\n            </td>\\n            <td>\\n              <input \\n                  class=\\\"form-control\\\" \\n                  type=\\\"number\\\" \\n                  formControlName=\\\"itemTotalPriceWithoutTax\\\" \\n                  (blur)=\\\"ItemTotalPriceWithoutTaxChanged(invoiceItem)\\\">\\n            </td>\\n            <td>\\n              <input \\n                  class=\\\"form-control\\\" \\n                  type=\\\"number\\\" \\n                  formControlName=\\\"itemTotalPriceWithTax\\\"\\n                  (blur)=\\\"ItemTotalPriceWithTaxChanged(invoiceItem)\\\">\\n            </td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"RemoveItemRow(i)\\\" [disabled]=\\\"invoiceForm.get('invoiceItems').length <= 1\\\">X</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <hr>\\n        <div class=\\\"col-sm-2\\\">\\n          <h4>Sposób płatności:</h4>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" formControlName=\\\"paymentType\\\">\\n            <option value=\\\"gotówka\\\">gotówka</option>\\n            <option value=\\\"przelew\\\">przelew</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n            <h4>Termin zapłaty:</h4>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <input class=\\\"form-control\\\" type=\\\"date\\\" formControlName=\\\"paymentDate\\\" #paymentDate>\\n        </div>\\n        <div class=\\\"col-sm-3\\\" style=\\\"text-align: right;\\\">\\n          <h4>Suma: {{sum | currencyPipe}} zł</h4>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-12\\\" style=\\\"margin-top: 50px;\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!invoiceForm.get('invoiceItems').valid\\\" (click)=\\\"AddItemRow()\\\">dodaj wiersz</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!invoiceForm.valid\\\">{{workMode}}</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"ClearForm()\\\">Wyczyść formularz</button>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.html\n// module id = ./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.html\n// module chunks = main","//#region import\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport {map} from 'rxjs/operators/map';\n\nimport { InvoiceFormOperations } from './helpClasses/invoice-form-operations';\nimport { GettingFormDataOperations } from './helpClasses/getting-form-data-operations';\nimport { PriceCalculation } from './helpClasses/price-calculation';\n\nimport { TaxValue } from '../../../enums/tax-value.enum';\nimport { Invoice } from '../../../models/invoice.model';\nimport { Customer } from '../../../models/customer.model';\nimport { InvoiceItem } from '../../../models/invoice-item.model';\n\nimport { InvoiceServices } from '../../../services/invoice services/invoice.services';\nimport { CustomerServices } from '../../../services/customer services/customer.services';\nimport { UserServices } from '../../../services/user services/user.services';\n//#endregion\n\n@Component({\n  selector: 'app-invoice-edit',\n  templateUrl: './invoice-edit.component.html',\n  styleUrls: ['./invoice-edit.component.css'],\n  providers: [InvoiceFormOperations, GettingFormDataOperations, TaxValue, PriceCalculation]\n})\nexport class InvoiceEditComponent implements OnInit {\n\n  constructor(private formOperations: InvoiceFormOperations,\n    private priceCalculation: PriceCalculation, \n    private gettingFormData: GettingFormDataOperations,\n    private invoiceService: InvoiceServices,\n    public customerService: CustomerServices,\n    private activRoute: ActivatedRoute, \n    private router: Router, \n    private userService: UserServices,\n    public taxValues: TaxValue){\n      this.userService.CheckTokenExpired();\n    }\n\n  //#region Properites\n  public title:string;\n  sum: number = 0;\n  public invoice:Invoice = new Invoice();\n  public customer: Customer = new Customer();\n  public workMode:string = \"Dodaj Fakutę\";\n  public editMode: boolean = false;\n  private index: number;\n  public invoiceItems: InvoiceItem[] = [];\n  public invoiceForm: FormGroup;\n  public filteredResult: Observable<string[]>\n  public selected = false;\n  //#endregion\n  \n  ngOnInit() {\n    //getting edited invoice data if exist\n    this.activRoute.params.subscribe(\n      (params: Params) => {\n      this.index = params['id'];\n      if(this.index !== undefined){\n        this.invoice = this.invoiceService.GetInvoiceByNumber(+this.index);\n        if(this.invoice != null){\n          this.customer = this.invoice['customer'];\n          this.workMode = \"Zapisz zmiany\";\n          this.editMode = true\n        }\n        else{\n          alert(\"Nie można znaleść faktury\");\n          this.router.navigate(['/invoice']);\n        }\n      }\n\n      if(this.workMode == \"Zapisz zmiany\"){\n        this.title = \"Edycja faktury nr \" + this.invoice['invoiceNumber'];\n      }\n      else{\n        this.title = \"Dodawanie faktury:\"\n      }     \n      this.InitializeForm();\n    });\n    //price sum change subscribing\n    this.CalculateSum();\n    this.invoiceForm.get('invoiceItems').valueChanges.subscribe(\n      () =>{\n        this.CalculateSum()\n    });\n    //filter subscribing\n    this.filteredResult = this.invoiceForm.get('customerName').valueChanges.pipe(map(param =>param == ''? [] : this.Filter(param)));\n    this.invoiceForm.get('customerName').valueChanges.subscribe(\n      () => {\n        this.selected = false;\n      }\n    );\n  }\n\n  //#region Methods which operates form\n\n  SubmitInvoice(){\n    let paymentDate: Date = this.gettingFormData.getPaymentDate(this.invoiceForm);\n    let paymentType = this.gettingFormData.getPaymentType(this.invoiceForm);\n    this.gettingFormData.getCustomerData(this.invoiceForm, this.customer);\n    this.gettingFormData.getInvoiceItems(this.invoiceForm, this.invoiceItems);\n    if(this.workMode == \"Zapisz zmiany\"){\n      this.invoiceService.UpdateInvoice(this.invoice, this.customer, this.invoiceItems, paymentDate, paymentType, this.index);\n      this.router.navigate(['/invoice']);\n    }\n    else{\n      this.invoiceService.AddInvoice(this.customer, this.invoiceItems, paymentDate, paymentType);\n      this.router.navigate(['/invoice']);\n    }\n  }\n\n  ClearForm(){\n    this.invoiceForm.reset();\n    this.formOperations.ClearInvoiceFormArray(this.invoiceForm);\n  }\n\n  AddItemRow(){\n    this.formOperations.AddItemRow(this.invoiceForm);\n  }  \n  \n  RemoveItemRow(index: number){\n    this.formOperations.RemoveItemRow(this.invoiceForm, index);\n    this.invoice.invoiceItems.splice(index,1);\n  }\n  //autocomplete customer section\n  AutocompleteForm(name: string){\n    if(this.customerService.GetCustomerByName(name) != null){\n      this.customer = this.customerService.GetCustomerByName(name);\n      this.invoiceForm.patchValue({\n        'customerName': this.customer['name'],\n        'customerCity':this.customer['city'],\n        'customerPostCode':this.customer['postCode'],\n        'customerStreet':this.customer['address'],\n        'customerNIP':this.customer['nip']\n      });\n      this.selected = true\n    }\n  }\n  //#endregion\n  \n  //#region Methods refers to invoiceItem's inputs changes\n\n  ItemUnitPriceWithoutTaxChanged(priceFormGroup: FormGroup){\n    this.priceCalculation.calculateTotalPriceWithoutTax(priceFormGroup, 'UnitPriceWithoutTax');\n    this.priceCalculation.calculateTotalPriceWithTax(priceFormGroup, 'UnitPriceWithoutTax');\n  }\n\n  ItemAmountChanged(priceFormGroup: FormGroup){\n    this.priceCalculation.calculateTotalPriceWithoutTax(priceFormGroup, 'itemAmount');\n    this.priceCalculation.calculateTotalPriceWithTax(priceFormGroup, 'itemAmount');\n  }\n\n  ItemTaxChanged(priceFormGroup: FormGroup){\n    this.priceCalculation.calculateTotalPriceWithTax(priceFormGroup, 'itemTax');\n  }\n\n  ItemTotalPriceWithoutTaxChanged(priceFormGroup: FormGroup){\n    this.priceCalculation.calculateUnitPriceWithoutTax(priceFormGroup, 'itemTotalPriceWithoutTax');\n    this.priceCalculation.calculateTotalPriceWithTax(priceFormGroup, 'itemTotalPriceWithoutTax');\n  }\n\n  ItemTotalPriceWithTaxChanged(priceFormGroup: FormGroup){\n    this.priceCalculation.calculateTotalPriceWithoutTax(priceFormGroup, 'itemTotalPriceWithTax');\n    this.priceCalculation.calculateUnitPriceWithoutTax(priceFormGroup, 'itemTotalPriceWithTax');\n  }\n  //#endregion\n\n  //#region Private methods\n\n  private CalculateSum(){\n    this.sum = this.priceCalculation.calculateSum(this.invoiceForm);\n  }\n\n  private InitializeForm(){\n    let paymentDate;\n    if(this.editMode){\n      let date =  new Date(this.invoice['paymentDate']);\n      paymentDate = this.SetDate(date);\n    }\n    else{\n      let now =  new Date();\n      paymentDate = this.SetDate(now);\n    }\n    let invoiceItems = new FormArray([]);\n    this.formOperations.InitializeFormArray(invoiceItems, this.editMode, this.invoice)\n    this.invoiceForm = new FormGroup({\n      'customerName': new FormControl(this.customer.name, Validators.required),\n      'customerCity': new FormControl(this.customer.city, Validators.required),\n      'customerPostCode': new FormControl(this.customer.postCode, [Validators.required, Validators.pattern('[0-9]{2}-[0-9]{3}')]),\n      'customerStreet': new FormControl(this.customer.address, Validators.required),\n      'customerNIP': new FormControl(this.customer.nip, [\n        Validators.required, \n        Validators.pattern('[0-9]{10}'), \n        Validators.maxLength(10),\n        Validators.minLength(10)]),\n      'invoiceItems': invoiceItems,\n      'paymentDate': new FormControl( paymentDate, Validators.required),\n      'paymentType': new FormControl(this.invoice['paymentType'], Validators.required)\n    })\n  }\n\n  private Filter(param: string){\n    return this.customerService.customers\n      .map(c => c.name)\n      .filter(name => name.toLocaleLowerCase().includes(param.toLocaleLowerCase()));\n  }\n\n  private SetDate(date: Date){\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    let dayFormat: string;\n    let monthFormat: string;\n    let yearFormat: string = String(year);\n    let today: string;\n\n    if(day < 10)\n      dayFormat = '0' + day;\n    else\n      dayFormat = day.toString();\n    if(month < 10)\n      monthFormat = '0' + month;\n    else\n      monthFormat = month.toString();\n    return today = yearFormat + '-' + monthFormat + '-' + dayFormat;\n  }\n  //#endregion\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoice-edit/invoice-edit.component.ts","module.exports = \".table-striped tbody {\\r\\n  height: 400px;\\r\\n  overflow-y: auto;\\r\\n  width: 100%;\\r\\n}\\r\\n.table-striped thead, .table-striped tbody, .table-striped tr, .table-striped td, .table-striped th {\\r\\n  display: block;\\r\\n}\\r\\n.table-striped tbody td, .table-striped thead > tr> td {\\r\\n  float: left;\\r\\n  border-bottom-width: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/invoices/invoice/invoice.component.css\n// module id = ./ClientApp/app/components/invoices/invoice/invoice.component.css\n// module chunks = main","module.exports = \"<div>\\n  <div class=\\\"well col-xs-12\\\">\\n    <div class=\\\"col-xs-12\\\" style=\\\"margin-bottom: 30px;\\\">\\n      <h2>Faktury:</h2>\\n    </div>\\n    <div class=\\\"col-xs-4\\\">\\n      <label for=\\\"searchParam\\\">Wyszukaj:</label>\\n      <input type=\\\"text\\\" name=\\\"searchParam\\\" class=\\\"form-control\\\" placeholder=\\\"Wyszukaj faktury po numerze\\\" [(ngModel)]=\\\"serchParam\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-4\\\">\\n      <label for=\\\"SerachFrom\\\">Od dnia:</label>\\n      <input type=\\\"date\\\" name=\\\"SearchFrom\\\" class=\\\"form-control\\\" #SearchFrom (input)=\\\"OnSearchFromChange()\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-4\\\">\\n      <label for=\\\"SerachTo\\\">Do dnia: </label>\\n      <input type=\\\"date\\\" name=\\\"SearchTo\\\" class=\\\"form-control\\\" #SearchTo (input)=\\\"OnSearchToChange()\\\"/>\\n    </div>\\n    <div class=\\\"col-xs-12\\\" style=\\\"margin-top: 10px;\\\">\\n      <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/invoice/add']\\\">Dodaj nową fakturę</button>\\n      <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"SearchByDate()\\\" [disabled]=\\\"searchDisabled\\\">Wyszukaj według daty</button>\\n      <button class=\\\"btn btn-warning pull-right\\\" (click)=\\\"ResetSerach()\\\" style=\\\"margin-right: 10px;\\\">Resetuj</button>\\n    </div>\\n  </div>\\n  <div>\\n    <table class=\\\"table table-striped\\\">\\n      <thead class=\\\"bg-primary col-sm-12\\\">\\n        <tr>\\n          <td class=\\\"col-sm-6\\\">Odbiorca:</td>\\n          <td class=\\\"col-sm-2\\\">Numer faktury:</td>\\n          <td class=\\\"col-sm-2\\\">Kwota:</td>\\n          <td class=\\\"col-sm-2\\\">Data wystawienia:</td>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr style=\\\"cursor: pointer;\\\" *ngFor=\\\"let invoice of invoices | InvoiceNumberSearch:serchParam; let i=index;\\\" \\n        [routerLink]=\\\"['/invoice/details']\\\" [queryParams]=\\\"{number: invoice['invoiceNumber']}\\\">\\n          <td class=\\\"col-sm-6\\\">{{invoice.customer.name}}</td>\\n          <td class=\\\"col-sm-2\\\">{{invoice.invoiceNumber}}/{{invoice.invoiceDate | date:'yyyy'}}</td>\\n          <td class=\\\"col-sm-2\\\">{{invoice.itemsPriceTotal | currencyPipe}} zł</td>\\n          <td class=\\\"col-sm-2\\\">{{invoice.invoiceDate | date:'dd.MM.yyyy'}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/invoices/invoice/invoice.component.html\n// module id = ./ClientApp/app/components/invoices/invoice/invoice.component.html\n// module chunks = main","import { Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Invoice } from '../../../models/invoice.model';\nimport { Observable } from 'rxjs/Observable';\n\nimport { InvoiceServices } from '../../../services/invoice services/invoice.services';\nimport { InvoiceHttpServices } from '../../../services/invoice services/invoice.http.services';\nimport { UserServices } from '../../../services/user services/user.services';\n\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.css']\n})\nexport class InvoiceComponent implements OnInit {\n\n  @ViewChild('SearchFrom') searchFrom: ElementRef;\n  @ViewChild('SearchTo') searchTo: ElementRef;\n  serchParam: string = '';\n  searchFromChanged: boolean = false;\n  searchToChanged: boolean = false;\n  invoices: Invoice[] = [];\n  searchDisabled = false;\n  \n  constructor(public invoiceService: InvoiceServices,private router: Router, private userService: UserServices) {\n    if(this.userService.userInactive){\n      this.userService.CheckTokenExpired();\n      this.userService.ResetActiveTimer();\n    }\n    this.invoices = this.invoiceService.invoices;\n  }\n\n  ngOnInit() {\n    this.SetDate(this.searchFrom);\n    this.SetDate(this.searchTo);\n    this.invoiceService.invoicesChanged.subscribe(\n      (invoices) => this.invoices = invoices\n    );\n  }\n\n  OnSearchFromChange(){\n    this.searchFromChanged = true;\n    this.DateRangeIsValid(this.searchToChanged)\n  }\n\n  OnSearchToChange(){\n    this.searchToChanged = true;\n    this.DateRangeIsValid(this.searchFromChanged)\n  }\n\n  SearchByDate(){\n    let partSearchFrom = this.searchFrom.nativeElement.value.split('-');\n    let partSearchTo = this.searchTo.nativeElement.value.split('-');\n    let searchFrom = new Date(partSearchFrom[0], partSearchFrom[1] - 1, partSearchFrom[2]);\n    let searchTo = new Date(partSearchTo[0], partSearchTo[1] - 1, partSearchTo[2], 23);\n    let newArray: Invoice[] = [];\n\n    for(let invoice of this.invoiceService.invoices){\n      let invoiceDate = new Date(invoice.invoiceDate);\n      if(invoiceDate >= searchFrom && invoiceDate <= searchTo){  \n        newArray.push(invoice);\n      }\n    }\n    this.invoices = newArray;\n  }\n\n  ResetSerach(){\n    this.invoices = this.invoiceService.invoices;\n    this.SetDate(this.searchFrom);\n    this.SetDate(this.searchTo);\n  }\n\n  private DateRangeIsValid(change: boolean){\n    if(change){\n      let dateFromArray = this.searchFrom.nativeElement.value.split('-');\n      let dateFrom = new Date(dateFromArray[0], dateFromArray[1] - 1, dateFromArray[2] - 1);\n      let dateToArray = this.searchTo.nativeElement.value.split('-');\n      let dateTo = new Date(dateToArray[0], dateToArray[1] - 1, dateToArray[2] - 1);\n\n      if(dateFrom > dateTo){\n        alert(\"Data początkowa jest większa niż data końcowa\");\n        this.searchDisabled = true;\n        //this.SetDate(this.searchFrom);\n      }\n      else{\n        this.searchDisabled = false;\n      }\n    }\n  }\n\n  private SetDate(dateInput: ElementRef){\n    let timeNow = new Date()\n    let day = timeNow.getDate();\n    let month = timeNow.getMonth() + 1;\n    let year = timeNow.getFullYear();\n    let dayFormat: string;\n    let monthFormat: string;\n    let yearFormat: string = String(year);\n    let today: string;\n\n    if(day < 10)\n      dayFormat = '0' + day;\n    else\n      dayFormat = day.toString();\n    if(month < 10)\n      monthFormat = '0' + month;\n    else\n      monthFormat = month.toString();\n    today = yearFormat + '-' + monthFormat + '-' + dayFormat;\n    dateInput.nativeElement.value = today;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoice/invoice.component.ts","import { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { InvoiceDetailsComponent } from \"./invoice-details/invoice-details.component\";\r\nimport { InvoiceEditComponent } from \"./invoice-edit/invoice-edit.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CanActivateGuard } from \"../../services/local authorization/can-activate-guard.service\";\r\n\r\n\r\nconst invoicesRouting: Routes = [\r\n  {path:'invoice', component: InvoiceComponent, canActivate: [CanActivateGuard]},\r\n  {path: 'invoice/details', component: InvoiceDetailsComponent, canActivate: [CanActivateGuard]},\r\n  {path:'invoice/add', component: InvoiceEditComponent, canActivate: [CanActivateGuard]},\r\n  {path:'invoice/edit/:id', component: InvoiceEditComponent, canActivate: [CanActivateGuard]},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports:[\r\n    RouterModule.forChild(invoicesRouting)\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class InvoicesRoutingModule{}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoices-routing.module.ts","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\n\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { InvoiceEditComponent } from \"./invoice-edit/invoice-edit.component\";\r\nimport { InvoiceDetailsComponent } from \"./invoice-details/invoice-details.component\";\r\nimport { InvoicesRoutingModule } from \"./invoices-routing.module\";\r\nimport { InvoiceNumberSearchPipe } from \"./pipes/InvoiceNumberSearch.pipe\";\r\nimport { GlobalPipesExportModule } from './../../pipes/global-pipes-export.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InvoiceComponent,\r\n    InvoiceEditComponent,\r\n    InvoiceDetailsComponent,\r\n    InvoiceNumberSearchPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    InvoicesRoutingModule,\r\n    GlobalPipesExportModule\r\n  ]\r\n})\r\nexport class InvoicesModule{\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/invoices.module.ts","import { Invoice } from './../../../models/invoice.model';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'InvoiceNumberSearch'\n})\nexport class InvoiceNumberSearchPipe implements PipeTransform {\n\n  transform(invoiceArray: Invoice[], param: string) {\n    if(param != '')\n      return invoiceArray.filter(i => i.invoiceNumber == Number(param));\n    return invoiceArray;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/invoices/pipes/InvoiceNumberSearch.pipe.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/nav/nav.component.css\n// module id = ./ClientApp/app/components/nav/nav.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">Rachunkowość</a>\\n        </div>\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['invoice']\\\">Faktury</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['customer']\\\">Klienci</a></li>\\n        </ul>\\n\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li routerLinkActive=\\\"active\\\"><a (click)=\\\"Logout()\\\" style=\\\"cursor: pointer;\\\">Wyloguj</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['user/edit']\\\">Twoje konto</a></li>\\n        </ul>\\n    </div>\\n  </nav>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/nav/nav.component.html\n// module id = ./ClientApp/app/components/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserServices } from './../../services/user services/user.services';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private userService: UserServices) { }\n\n  ngOnInit() {\n\n  }\n\n  Logout(){\n    this.userService.LogOut();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/nav/nav.component.ts","module.exports = \".login-box{\\r\\n  display: inline-block;\\r\\n  margin-top: 20%;\\r\\n  float: none;\\r\\n}\\r\\n\\r\\n.background{\\r\\n  background: #42a5f5;\\r\\n  height: 100vh;\\r\\n}\\r\\n\\r\\n.title{\\r\\n  background: white;\\r\\n  text-align: center;\\r\\n  border-radius: 5px 5px 0px 0px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/login/login.component.css\n// module id = ./ClientApp/app/components/users/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container background\\\">  \\n  <div class=\\\"login-box col-sm-6 col-sm-offset-3\\\">\\n    <div class=\\\"title col-sm-12\\\">\\n      <h2>System Księgowy</h2>\\n      <br>\\n      <h4>Logowanie:</h4>\\n    </div>\\n    <div class=\\\"well\\\">\\n      <div class=\\\"col-sm-12\\\"><br></div>\\n      <form (ngSubmit)=\\\"Login()\\\" #loginForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-2\\\">\\n            <label for=\\\"userName\\\">Login:</label>\\n          </div>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" name=\\\"userName\\\" id=\\\"userName\\\" class=\\\"form-control\\\" [ngModel]=\\\"loginData.userName\\\" #login=\\\"ngModel\\\" required/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-2\\\">\\n            <label for=\\\"password\\\">Hasło:</label>\\n          </div>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" [ngModel]=\\\"loginData.password\\\" #password=\\\"ngModel\\\" required/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n        <div style=\\\"text-align: center;\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Zaloguj się</button>\\n          <div>\\n            <h4>Lub</h4>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"NavigateRegister()\\\">Zarejestruj się</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/login/login.component.html\n// module id = ./ClientApp/app/components/users/login/login.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UserServices } from './../../../services/user services/user.services';\nimport { LoginModel } from './../../../models/login.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('loginForm') loginForm: NgForm\n  loginData: LoginModel ={\n    userName: '',\n    password: '',\n  }\n\n  constructor(private userService: UserServices, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  Login(){\n    this.loginData.userName = this.loginForm.value.userName;\n    this.loginData.password = this.loginForm.value.password;\n    this.userService.Login(this.loginData);\n  }\n\n  NavigateRegister(){\n    this.router.navigate(['/user/register'])\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/login/login.component.ts","module.exports = \"input.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\\r\\n\\r\\n.register-box{\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 60%;\\r\\n  margin-top: 10%;\\r\\n  margin-bottom: 10%;\\r\\n  margin-left: 25%;\\r\\n  margin-right: 25%;\\r\\n}\\r\\n\\r\\n.background{\\r\\n  background: #42a5f5;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.title{\\r\\n  background: white;\\r\\n  text-align: center;\\r\\n  border-radius: 5px 5px 0px 0px;\\r\\n}\\r\\n\\r\\n.vertical-center {\\r\\n  min-height: 100%;\\r\\n  min-height: 100vh;\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/register/register.component.css\n// module id = ./ClientApp/app/components/users/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"background vertical-center\\\">\\n    <div class=\\\"register-box\\\">\\n      <div class=\\\"title col-sm-12\\\" style=\\\"text-align: center;\\\">\\n        <h2>Rejsetracja</h2>\\n      </div>\\n      <div class=\\\"well col-sm-12\\\">\\n        <form (ngSubmit)=\\\"Register()\\\" #registerForm=\\\"ngForm\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <h4>Dane Użytkownika:</h4>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"userName\\\">Login:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"text\\\" \\n              name=\\\"userName\\\" \\n              id=\\\"userName\\\" \\n              class=\\\"form-control\\\" \\n              [ngModel]=\\\"registerData.userName\\\" \\n              #login=\\\"ngModel\\\"\\n              autocomplete=\\\"off\\\"\\n              (blur)=\\\"IsAvailable('name', login.value)\\\"\\n              placeholder=\\\"Login\\\"\\n              required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"password\\\">Hasło:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"password\\\" \\n              name=\\\"password\\\" \\n              id=\\\"password\\\" \\n              class=\\\"form-control\\\" \\n              [ngModel]=\\\"registerData.password\\\" \\n              autocomplete=\\\"off\\\" \\n              minlength=\\\"6\\\"\\n              #password=\\\"ngModel\\\"\\n              placeholder=\\\"min. 6 znaków\\\"\\n              required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"email\\\">Email:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"email\\\" \\n              pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n              name=\\\"email\\\" \\n              id=\\\"email\\\" \\n              class=\\\"form-control\\\"\\n              [ngModel]=\\\"registerData.email\\\" \\n              #email=\\\"ngModel\\\"\\n              placeholder=\\\"nazwa@mail.com\\\"\\n              (blur)=\\\"IsAvailable('email', email.value)\\\"\\n              autocomplete=\\\"off\\\" \\n              required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"col-sm-12\\\">\\n            <hr style=\\\"border-color: black;\\\">\\n            <h4>Dane Firmy:</h4>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"name\\\">Nazwa:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input \\n              type=\\\"text\\\" \\n              name=\\\"name\\\" \\n              id=\\\"name\\\" \\n              class=\\\"form-control\\\" \\n              [ngModel]=\\\"registerData.name\\\" \\n              #name=\\\"ngModel\\\" \\n              placeholder=\\\"Nazwa firmy\\\"\\n              required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"address\\\">Ulica:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input \\n              type=\\\"text\\\" \\n              name=\\\"address\\\" \\n              id=\\\"address\\\" \\n              class=\\\"form-control\\\" \\n              [ngModel]=\\\"registerData.address\\\" \\n              #address=\\\"ngModel\\\" \\n              placeholder=\\\"np. Kościuszki 4a\\\"\\n              required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"postCode\\\">Kod pocztowy:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input \\n              type=\\\"text\\\" \\n              name=\\\"postCode\\\" \\n              id=\\\"postCode\\\" \\n              class=\\\"form-control\\\" \\n              [ngModel]=\\\"registerData.postCode\\\" \\n              #postCode=\\\"ngModel\\\" \\n              required \\n              pattern=\\\"[0-9]{2}-[0-9]{3}\\\"\\n              placeholder=\\\"np. 12-345\\\"\\n              maxlength=\\\"6\\\"/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"city\\\">Miasto:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" class=\\\"form-control\\\" [ngModel]=\\\"registerData.city\\\" #city=\\\"ngModel\\\" required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"nip\\\">NIP:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input \\n              type=\\\"text\\\" \\n              name=\\\"nip\\\" \\n              id=\\\"nip\\\" \\n              class=\\\"form-control\\\" \\n              [ngModel]=\\\"registerData.nip\\\" \\n              #nip=\\\"ngModel\\\" \\n              required  \\n              pattern=\\\"[0-9]{10}\\\"\\n              placeholder=\\\"np. 1234567890\\\"\\n              maxlength=\\\"10\\\"/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><hr style=\\\"border-color: black;\\\"></div>\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <label for=\\\"nip\\\">Klucz dostępu:</label>\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"text\\\" name=\\\"specialKey\\\" id=\\\"specialKey\\\" class=\\\"form-control\\\" [ngModel]=\\\"registerData.specialKey\\\" #nip=\\\"ngModel\\\" required/>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\"><br></div>\\n          <div class=\\\"col-sm-12\\\" style=\\\"text-align: center;\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!registerForm.valid\\\">Zarejestruj się</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/register/register.component.html\n// module id = ./ClientApp/app/components/users/register/register.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RegisterModel } from './../../../models/register.model';\nimport { NgForm } from '@angular/forms';\nimport { UserHttpServices } from '../../../services/user services/user.http.services';\nimport { UserServices } from './../../../services/user services/user.services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerData: RegisterModel = new RegisterModel();\n  @ViewChild('registerForm') registerForm: NgForm;\n\n  constructor(private userHttpService: UserHttpServices,private userService: UserServices) { \n  }\n\n  ngOnInit() {\n  }\n\n  Register(){\n    this.registerData.address = this.registerForm.value.address;\n    this.registerData.city = this.registerForm.value.city;\n    this.registerData.email = this.registerForm.value.email;\n    this.registerData.name = this.registerForm.value.name;\n    this.registerData.nip = this.registerForm.value.nip;\n    this.registerData.password = this.registerForm.value.password;\n    this.registerData.postCode = this.registerForm.value.postCode;\n    this.registerData.userName = this.registerForm.value.userName;\n    this.registerData.specialKey = this.registerForm.value.specialKey;\n\n    this.userService.Register(this.registerData);\n  }\n\n  IsAvailable(parameterType: string, parameterValue: string){\n    let toValidateArray: string[] = [];\n    if(parameterValue != undefined && parameterValue != ''){\n      toValidateArray.push(parameterType);\n      toValidateArray.push(parameterValue);\n      this.userHttpService.IsAvailabel(toValidateArray).subscribe(\n        (isAvaliable) => {\n          if(!isAvaliable){\n            this.registerForm.form.controls[parameterType].setErrors({'incorrect': true});\n            alert(\"Nazwa zajęta\");\n          }\n        }\n      );\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/register/register.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.css\n// module id = ./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3>Dane logowania:</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form (ngSubmit)=\\\"UpdatePassword()\\\" #userPasswordForm=\\\"ngForm\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"oldpassword\\\">Stare Hasło:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"password\\\" name=\\\"oldpassword\\\" id=\\\"oldpassword\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"oldPassword\\\" required #oldpassword/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n        \\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"newPasswor\\\">Nowe Hasło:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"password\\\"\\n             name=\\\"newPassword\\\"\\n             class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"newPassword\\\" \\n              required \\n              minlength=\\\"6\\\"\\n              #newPasswor/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n        \\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userPasswordForm.valid\\\">Zmień Hasło</button>\\n      </form>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.html\n// module id = ./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserServices } from '../../../../services/user services/user.services';\nimport { ChangePasswordModel } from '../../../../models/change-password.model';\n\n@Component({\n  selector: 'app-password-edit',\n  templateUrl: './password-edit.component.html',\n  styleUrls: ['./password-edit.component.css']\n})\nexport class PasswordEditComponent implements OnInit {\n\n  @ViewChild('userPasswordForm') passwordForm: NgForm;\n  \n  oldPassword: string = '';\n  newPassword: string = '';\n  passwordData: ChangePasswordModel = new ChangePasswordModel();\n  \n  constructor(private userService: UserServices) {\n   }\n\n  ngOnInit() {\n  }\n\n  UpdatePassword(){\n    this.passwordData.password = this.oldPassword;\n    this.passwordData.newPassword = this.newPassword;\n    this.userService.ChangePassword(this.passwordData);\n    this.passwordForm.reset();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/user-edit/password-edit/password-edit.component.ts","module.exports = \"input.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.css\n// module id = ./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.css\n// module chunks = main","module.exports = \"<div style=\\\"max-width: 60%; text-align: center; position: relative; margin-left:20%;\\\">\\n  <form #autocofigForm=\\\"ngForm\\\" (ngSubmit)=\\\"Autoconfig();\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Email:</label>\\n      <input type=\\\"email\\\" name=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"config.username\\\" #email=\\\"ngModel\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"/>\\n    </div>\\n    <div><br></div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Hasło:</label>\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"config.password\\\" #password=\\\"ngModel\\\" required/>\\n    </div>\\n    <div><br></div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"domain\\\">Dostawca poczty email:</label>\\n      <select class=\\\"form-control\\\" name=\\\"domain\\\" [(ngModel)]=\\\"config.domain\\\" #domain=\\\"ngModel\\\" required>\\n        <option *ngFor=\\\"let email of emailProviders['providers']\\\" value=\\\"{{email}}\\\">{{email}}</option>\\n      </select>\\n    </div>\\n    <div><br></div>\\n    <div *ngIf=\\\"!changingStart\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Konfiguruj</button>\\n    </div>\\n    <div *ngIf=\\\"changingStart\\\" style=\\\"text-align:center;\\\">\\n      <p>Proszę czekać</p>\\n      <span class=\\\"glyphicon glyphicon-cog\\\" style=\\\"font-size:24px\\\"></span>\\n    </div>\\n  </form>\\n</div>\\n<div><hr></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.html\n// module id = ./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { EmailService } from './../../../../../services/email service/email.service';\nimport { AutoConfig } from './../../../../../models/auto-config.model';\nimport { EmailServiceProviders } from './../../../../../enums/email-service-providers.enum';\nimport { SmtpConfigurationModel } from '../../../../../models/smtp-configuration.model';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-help-auto-config',\n  templateUrl: './help-auto-config.component.html',\n  styleUrls: ['./help-auto-config.component.css'],\n  providers: [EmailServiceProviders]\n})\nexport class HelpAutoConfigComponent implements OnInit {\n\n  config: AutoConfig = new AutoConfig();\n  smtpConfig: SmtpConfigurationModel;\n  changingStart:boolean = false;\n  smtpChangSub: Subscription;\n  constructor(public emailProviders: EmailServiceProviders, private emailService: EmailService) { }\n\n  ngOnInit() {\n  }\n\n  Autoconfig(){\n    this.changingStart = true;\n    this.emailService.SmtpAutoConfig(this.config);\n    this.smtpChangSub = this.emailService.autoConfigResult.subscribe(\n      (result) => {\n        if(result != null){\n          this.smtpConfig = result;\n          alert(\"Konfiguracja ukończona pomyślnie.\\n\\nTwoje ustawienia to:\\n\\nHost: \" \n          + this.smtpConfig.host \n          + \"\\nEmail:\" + this.smtpConfig.username \n          + \"\\nSSL: \" + (this.smtpConfig.sslEnabled ? \"Tak\": \"Nie\") \n          + \"\\nPort: \" + this.smtpConfig.port);\n        }\n        this.changingStart = false;\n        this.smtpChangSub.unsubscribe();\n      }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/help-auto-config/help-auto-config.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.css\n// module id = ./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.css\n// module chunks = main","module.exports = \"<div>\\n  <h4>Konfiguracja SMTP</h4>\\n  <p>Pozwala na wysyłanie wiadomości email do Twoich klientów.</p>\\n  <p>\\n    Nie musisz konfigurować tych ustawień, oprogramwanie posiada\\n    już skonfigurowane ustawienia, tak aby klieci mogli odbierać wiadomości.\\n  </p>\\n  <p>\\n    Każda wiadomość wysłana z tego serwisu jest podpisywana Twoją nazwą firmy. Jeśli klient będzie chciał odpowiedzieć\\n    na Twojego maila, zostanie on przekierownany na email, który był podczas rejestracji.\\n  </p>\\n  <p>\\n    Jeżeli chcesz skonfigurować te ustawienia, dowiedz się kto jest Twoim dostawcą usług pocztowych\\n    i jakiej konfiguracji należy użyć, aby zintegrować się z pocztą. W przypadku gdy podany przez\\n    Ciebie port nie będzie działał zostanie ustawiony domyślny port 587, jeśli na nim pojawi się błąd\\n    program wyświetli komunikat o nie udanej próbie konfiguracji. Niektóre serwisy taki jak Gmail, Yahoo\\n    wymagają aby włączyć w ustawieniach dostęp do poczty dla mniej bezpiecznych aplikacji.\\n    Poniżej podano adresy do konfiguracji do kilku popularnych serwisów pocztowych:\\n  </p>\\n  <ul style=\\\"list-style:lower-alpha;\\\">\\n    <li><a target=\\\"_blank\\\" href=\\\"https://support.google.com/a/answer/176600?hl=pl\\\">Gmail</a></li>\\n    <li><a target=\\\"_blank\\\" href=\\\"https://help.yahoo.com/kb/SLN4075.html\\\">Yahoo</a></li>\\n    <li>\\n      <a target=\\\"_blank\\\" href=\\\"https://support.office.com/en-us/article/pop-imap-and-smtp-settings-for-outlook-com-d088b986-291d-42b8-9564-9c414e2aa040?ui=en-US&rs=en-US&ad=US\\\">\\n        Microsoft Outlook\\n      </a>\\n    </li>\\n    <li><a target=\\\"_blank\\\" href=\\\"https://pomoc.home.pl/baza-wiedzy/jak-skonfigurowac-program-do-obslugi-poczty-e-mail\\\">Home</a></li>\\n    <li><a target=\\\"_blank\\\" href=\\\"https://pomoc.wp.pl/jak-skonfigurowac-program-pocztowy\\\">Wirtualna Polska / O2</a></li>\\n    <li><a target=\\\"_blank\\\" href=\\\"http://m.poczta.onet.pl/pomoc/servers.html\\\" >Onet</a></li>\\n  </ul>\\n  <p>Jeżeli chcesz aby system spróbował automatycznie skonfigurować ustawienia SMTP przejdź do Autokonfiguracji.</p>\\n  <p>Zostaniesz poniformowany jakie ustawienia zostały wprowadzone</p>\\n  <br>\\n  <hr>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.html\n// module id = ./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-info',\n  templateUrl: './help-info.component.html',\n  styleUrls: ['./help-info.component.css']\n})\nexport class HelpInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/help-info/help-info.component.ts","module.exports = \".switch {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  width: 30px;\\r\\n  height: 17px;\\r\\n}\\r\\n\\r\\n.switch input {\\r\\n  display:none;\\r\\n}\\r\\n\\r\\n.slider {\\r\\n  position: absolute;\\r\\n  cursor: pointer;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background-color: #ccc;\\r\\n  -webkit-transition: .4s;\\r\\n  transition: .4s;\\r\\n}\\r\\n\\r\\n.slider:before {\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  height: 13px;\\r\\n  width: 13px;\\r\\n  left: 2px;\\r\\n  bottom: 2px;\\r\\n  background-color: white;\\r\\n  -webkit-transition: .4s;\\r\\n  transition: .4s;\\r\\n}\\r\\n\\r\\ninput:checked + .slider {\\r\\n  background-color: #1565c0;\\r\\n}\\r\\n\\r\\ninput:focus + .slider {\\r\\n  -webkit-box-shadow: 0 0 1px #1565c0;\\r\\n          box-shadow: 0 0 1px #1565c0;\\r\\n}\\r\\n\\r\\ninput:checked + .slider:before {\\r\\n  -webkit-transform: translateX(13px);\\r\\n  transform: translateX(13px);\\r\\n}\\r\\n\\r\\n.glyphicon-ok-circle{\\r\\n  color: rgb(86, 141, 4);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.css\n// module id = ./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3>Ustawienia serwisu SMTP</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      Uwaga! Zmiana tych ustawień może spowodować, że wysłane wiadomośći nie będą docierać do odbiorcy\\n      <span class=\\\"col-sm-12\\\">\\n        <span style=\\\"float:left;\\\"><strong>Odblikuj zmianę konfiguracji: </strong></span>\\n        <label class=\\\"switch\\\" style=\\\"float:left; margin-left: 5px;\\\">\\n          <input type=\\\"checkbox\\\" #unlockForm [(ngModel)]=\\\"allowedToConfiguration\\\" (click)=\\\"ActiveForm()\\\">\\n          <span class=\\\"slider\\\"></span>\\n        </label>\\n      </span>\\n      <div class=\\\"col-sm-4\\\" style=\\\"float:none;\\\"></div>\\n    </div>\\n    <div class=\\\"col-sm-12\\\"><hr></div>\\n    <div>\\n      <form #smtpForm=\\\"ngForm\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"ChangeSmtp()\\\">\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <div class=\\\"col-sm-3\\\">\\n            <label>Hosta serwera:</label>\\n          </div>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"host\\\" #host=\\\"ngModel\\\" [(ngModel)]=\\\"smtpConfig.host\\\" required>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <div class=\\\"col-sm-3\\\">\\n            <label>Port:</label>\\n          </div>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"port\\\" #port=\\\"ngModel\\\" [(ngModel)]=\\\"smtpConfig.port\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <div class=\\\"col-sm-3\\\">\\n            <label>Nazwa użytkownika:</label>\\n          </div>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"smtpConfig.username\\\" placeholder=\\\"najczęść to Twój email\\\" required>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <div class=\\\"col-sm-3\\\">\\n            <label>Hasło:</label>\\n          </div>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"smtpConfig.password\\\" required>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label>SSL włączone:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" #sslEnabled=\\\"ngModel\\\" name=\\\"sslEnabled\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"smtpConfig.sslEnabled\\\" required>Tak</label>\\n            <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" #sslEnabled=\\\"ngModel\\\" name=\\\"sslEnabled\\\" [value]=\\\"false\\\" [(ngModel)]=\\\"smtpConfig.sslEnabled\\\" required>Nie</label>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!changingStart && !changeSucceded\\\" class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-9\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!smtpForm.valid\\\">Zmień ustawienia</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [disabled]=\\\"!unlockForm.checked\\\" (click)=\\\"ResetSmtpSettings()\\\">Ustaw domyślne</button>\\n          </div>\\n          <div class=\\\"col-sm-3 pull-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#helpModal\\\">Pomoc</button>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"changingStart\\\" style=\\\"text-align:center;\\\">\\n          <p>Proszę czekać</p>\\n          <span class=\\\"glyphicon glyphicon-cog\\\" style=\\\"font-size:24px\\\"></span>\\n        </div>\\n        <div *ngIf=\\\"changeSucceded\\\" style=\\\"text-align:center;\\\">\\n          <p>Zapisano pomyślnie</p>\\n          <span class=\\\"glyphicon glyphicon-ok-circle\\\" style=\\\"font-size:24px\\\"></span>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<!--Modal for SMTP help-->\\n<div id=\\\"helpModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"configPage = false\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Pomoc</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <app-help-info *ngIf=\\\"!configPage\\\"></app-help-info>\\n        <app-help-auto-config *ngIf=\\\"configPage\\\"></app-help-auto-config>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeInfoPage()\\\">{{configPage ? 'Do informacji' : 'Do autokonfiguracji'}}</button>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"configPage = false\\\">Zamknij</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.html\n// module id = ./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SmtpConfigurationModel } from '../../../../models/smtp-configuration.model';\nimport { EmailService } from './../../../../services/email service/email.service';\n\n@Component({\n  selector: 'app-smtp-configuration',\n  templateUrl: './smtp-configuration.component.html',\n  styleUrls: ['./smtp-configuration.component.css']\n})\nexport class SmtpConfigurationComponent implements OnInit{\n\n  @ViewChild('unlockForm') unlockedForm: ElementRef;\n  @ViewChild('smtpForm') smtpForm: NgForm;\n\n  smtpConfig: SmtpConfigurationModel = new SmtpConfigurationModel();\n  configPage: boolean = false;\n  allowedToConfiguration = false;\n  changingStart: boolean = false;\n  changeSucceded: boolean = false;\n  constructor(private emailService: EmailService) { \n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.smtpForm.form.disable();\n    }, 200);\n  }\n\n  ActiveForm(){\n    if(this.unlockedForm.nativeElement.checked){\n      this.smtpForm.form.enable();\n    }\n    else{\n      this.smtpForm.form.disable();\n    }\n  }\n\n  ChangeSmtp(){\n    this.emailService.ChangeSmtpSettings(this.smtpConfig);\n    this.changingStart = true;\n    this.emailService.smtpSettingsChanged.subscribe(\n      (result) => {\n        if(result){\n          this.changingStart = false;\n          this.changeSucceded = result;\n          setTimeout(() => {\n            this.changeSucceded = false;\n          }, 1500);\n        }\n        else\n          this.changingStart = false;\n      }\n    );\n  }\n\n  ResetSmtpSettings(){\n    this.emailService.ResetDefaults();\n    this.changingStart = true;\n    this.emailService.smtpSettingsChanged.subscribe(\n      (result) => {\n        if(result){\n          this.changingStart = false;\n          this.changeSucceded = result;\n          setTimeout(() => {\n            this.changeSucceded = false;\n          }, 1500);\n        }\n        else\n          this.changingStart = false;\n      }\n    );\n  }\n\n  changeInfoPage(){\n    this.configPage = !this.configPage;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/user-edit/smtp-configuration/smtp-configuration.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.css\n// module id = ./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3>Dane użytkownika:</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form (ngSubmit)=\\\"UpdateUserData()\\\" #userDataForm=\\\"ngForm\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"name\\\">Nazwa:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.name\\\" required #name/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"address\\\">Ulica:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" name=\\\"address\\\" id=\\\"address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.address\\\" required #address/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"postCode\\\">Kod pocztowy:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" name=\\\"postCode\\\" id=\\\"postCode\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.postCode\\\" required pattern=\\\"[0-9]{2}-[0-9]{3}\\\"/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"city\\\">Miasto:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.city\\\" required #city/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label for=\\\"nip\\\">NIP:</label>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" name=\\\"nip\\\" id=\\\"nip\\\" class=\\\"form-control\\\" #nip [(ngModel)]=\\\"user.nip\\\" required pattern=\\\"[0-9]{10}\\\"/>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\"><br></div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!userDataForm.valid\\\">Zmień Dane</button>\\n      </form>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.html\n// module id = ./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from '../../../../models/user.model';\nimport { UserServices } from '../../../../services/user services/user.services';\n\n@Component({\n  selector: 'app-user-data-edit',\n  templateUrl: './user-data-edit.component.html',\n  styleUrls: ['./user-data-edit.component.css']\n})\nexport class UserDataEditComponent implements OnInit {\n\n  user: UserModel;\n\n  constructor(private userService: UserServices) {\n    this.user = this.userService.userData;\n   }\n\n  ngOnInit() {\n  }\n\n  UpdateUserData(){\n    this.userService.ChangeUserData(this.user);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/user-edit/user-data-edit/user-data-edit.component.ts","module.exports = \"input.ng-touched.ng-invalid{\\r\\n  background-color: #ffb3b3;\\r\\n  border: 2px solid red;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/user-edit.component.css\n// module id = ./ClientApp/app/components/users/user-edit/user-edit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-sm-12\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <!-- Password Edit -->\\n    <app-password-edit></app-password-edit>\\n    <!-- SMTP Configuration -->\\n    <app-smtp-configuration></app-smtp-configuration>\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n    <app-user-data-edit></app-user-data-edit>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/components/users/user-edit/user-edit.component.html\n// module id = ./ClientApp/app/components/users/user-edit/user-edit.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserModel } from './../../../models/user.model';\nimport { UserServices } from './../../../services/user services/user.services';\nimport { ChangePasswordModel } from './../../../models/change-password.model';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  constructor(private userService: UserServices) {}\n\n  ngOnInit() {\n    this.userService.CheckTokenExpired();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/user-edit/user-edit.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { CanActivateGuard } from '../../services/local authorization/can-activate-guard.service';\r\n\r\nconst usersRouting: Routes = [\r\n  {path: 'user/login', component: LoginComponent},\r\n  {path: 'user/register', component: RegisterComponent},\r\n  {path: 'user/edit', component: UserEditComponent, canActivate: [CanActivateGuard]}\r\n]\r\n\r\n@NgModule({\r\n  imports:[\r\n    RouterModule.forChild(usersRouting)\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class UsersRoutingModule{}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/users-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { PasswordEditComponent } from './user-edit/password-edit/password-edit.component';\r\nimport { UserDataEditComponent } from './user-edit/user-data-edit/user-data-edit.component';\r\nimport { SmtpConfigurationComponent } from './user-edit/smtp-configuration/smtp-configuration.component';\r\nimport { HelpInfoComponent } from './user-edit/smtp-configuration/help-info/help-info.component';\r\nimport { HelpAutoConfigComponent } from './user-edit/smtp-configuration/help-auto-config/help-auto-config.component';\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    UserEditComponent,\r\n    PasswordEditComponent,\r\n    UserDataEditComponent,\r\n    SmtpConfigurationComponent,\r\n    HelpInfoComponent,\r\n    HelpAutoConfigComponent\r\n],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    UsersRoutingModule\r\n  ]\r\n})\r\nexport class UsersModule{}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/components/users/users.module.ts","export class EmailServiceProviders{\r\n  providers: string[] = [\r\n    \"Gmail\",\r\n    \"Yahoo\",\r\n    \"Outlook\",\r\n    \"Home\",\r\n    \"Wirtualna Polska\",\r\n    \"O2\",\r\n    \"Onet\",\r\n    \"Inny dostawca\"\r\n  ];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/enums/email-service-providers.enum.ts","export class TaxValue{\r\n  values: number[] = [0,5,8,23]\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/enums/tax-value.enum.ts","export class AutoConfig{\r\n  username: string;\r\n  password: string;\r\n  domain: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/auto-config.model.ts","export class ChangePasswordModel{\r\n  password: string; \r\n  newPassword: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/change-password.model.ts","export class Customer{\r\n    public id: number;\r\n    public name: string;\r\n    public address: string; \r\n    public city: string; \r\n    public postCode: string; \r\n    public email: string;\r\n    public nip: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/customer.model.ts","export class EmailMessageModel{\r\n  messageBody: string;\r\n  subject: string;\r\n  receiver: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/email-message.model.ts","export class InvoiceItem{\r\n  id: string;\r\n  name: string;\r\n  amount: number;\r\n  tax: number;\r\n  unitPriceWithoutTax: number;\r\n  totalPriceWithoutTax: number;\r\n  totalPriceWithTax: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/invoice-item.model.ts","import { InvoiceItem } from './invoice-item.model';\r\nimport { Customer } from './customer.model';\r\n\r\nexport class Invoice{\r\n  id:number;\r\n  customer: Customer;\r\n  invoiceItems: InvoiceItem[];\r\n  invoiceNumber: number;\r\n  itemsPriceTotal: number;\r\n  paymentType: string;\r\n  invoiceDate: Date;\r\n  paymentDate: Date;\r\n  accounted: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/invoice.model.ts","export class LoginModel{\r\n  userName: string;\r\n  password: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/login.model.ts","export class RegisterModel{\r\n  userName: string;\r\n  password: string;\r\n  name: string;\r\n  address: string;\r\n  postCode: string;\r\n  city: string;\r\n  nip: string;\r\n  email: string;\r\n  specialKey: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/register.model.ts","export class SmtpConfigurationModel{\r\n  public host: string\r\n  public port: number\r\n  public username: string\r\n  public password: string\r\n  public sslEnabled: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/smtp-configuration.model.ts","export class TokenModel{\r\n  token: string;\r\n  expiration: Date;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/token.model.ts","export class UserModel{\r\n  name: string;\r\n  address: string;\r\n  postCode: string;\r\n  city: string;\r\n  nip: string;\r\n  email: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/user.model.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyPipe'\n})\nexport class CurrencyPipe implements PipeTransform {\n\n  transform(value: string): any {\n    let regex = new RegExp('[0-9]{1,}.[0-9]{2}');\n    value = Number(value).toFixed(2).toString();\n    value = value.toString().replace(',','.');\n    let valueArray = value.split('');\n    \n    if(!valueArray.includes('.')){\n      valueArray.push('.00');\n      value = valueArray.join('')\n      return value;\n    }\n    for(let i = 0; i < 2; i++){\n      if(!regex.test(value)){\n        valueArray.push('0');\n        value = valueArray.join('');\n      }\n    }\n    return value;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/pipes/currency.pipe.ts","import { CurrencyPipe } from './currency.pipe';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n    CurrencyPipe\n  ],\n  imports: [\n\n  ],\n  exports:[\n    CurrencyPipe\n  ]\n\n})\nexport class GlobalPipesExportModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/pipes/global-pipes-export.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './../components/users/login/login.component';\nimport { InvoicesModule } from '../components/invoices/invoices.module';\n\nconst appRoutes: Routes = [\n  {path: 'customer', loadChildren: '../components/customers/customers.module#CustomersModule'},\n  {path: 'invoice', loadChildren: '../components/invoices/invoices.module#InvoicesModule'},\n  {path: 'user', loadChildren: '../components/users/users.module#UsersModule'},\n  {path: '**', redirectTo: 'invoice', pathMatch: 'full'}\n]\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n  ],\n  exports:[RouterModule]\n})\nexport class RoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/routing/routing.module.ts","import { TokenModel } from \"../models/token.model\";\r\n\r\nexport class CommonService {\r\n  token: TokenModel = new TokenModel();\r\n  \r\n  constructor() {\r\n    this.token['token'] = '';\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/common.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Customer } from '../../models/customer.model';\r\nimport { CommonService } from './../common.service';\r\n\r\n@Injectable()\r\nexport class CustomerHttpServices{\r\n  constructor(private httpClient: HttpClient, private commonData: CommonService){}\r\n\r\n  GetByNip(nip: string){\r\n    return this.httpClient.get<Customer>('api/Customer/GetByNip?nip=' + nip, \r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  GetAll(){\r\n    return this.httpClient.get<Customer[]>('api/Customer/GetAll',\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Add(customer: Customer){\r\n    return this.httpClient.post<Customer>(\"api/Customer/Add\", customer,\r\n     {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Update(customer: Customer){\r\n    return this.httpClient.put<Customer>(\"api/Customer/Update\", customer,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Exist(customer: Customer){\r\n    return this.httpClient.post<boolean>(\"api/Customer/Exist\", customer,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/customer services/customer.http.services.ts","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Customer } from '../../models/customer.model';\r\nimport { UserServices } from './../user services/user.services';\r\nimport { CustomerHttpServices } from './customer.http.services';\r\n\r\n@Injectable()\r\nexport class CustomerServices{\r\n\r\n  constructor(private customerHttp: CustomerHttpServices, private userService: UserServices){}\r\n\r\n  customers: Customer[] = [];\r\n  customersChanged: Subject<Customer[]> = new Subject<Customer[]>();\r\n    \r\n  //http setting customers Array on app start\r\n  SetCustomersHttp(){\r\n      this.customerHttp.GetAll().subscribe(\r\n        (response) => {\r\n          this.customers = response;\r\n          this.customersChanged.next(this.customers);\r\n        },\r\n        (error) => {\r\n          if(error.status == \"401\"){\r\n            this.userService.LogOut();\r\n            return;\r\n          }\r\n        }\r\n      )\r\n      return this.customers;\r\n  }\r\n  \r\n  AddCustomer(newCustomer: Customer){\r\n    let customerExist = this.customers.map(c => c.nip).indexOf(newCustomer.nip);\r\n    if(customerExist != -1){\r\n        let currentCutomer = this.customers[customerExist]\r\n        let choice = confirm(\"klient o podanym NIP juz jest w bazie danych:\\n\" + currentCutomer.name + \r\n        \"\\n\" + currentCutomer.city + \" \" + currentCutomer.postCode + \"\\n\" + currentCutomer.address + \"\\n\" \r\n        + currentCutomer.nip + \"\\n\\nCzy chcesz nadpisać klienta?\"\r\n      );\r\n\r\n      if(choice){\r\n        this.UpdateCustomer(newCustomer);\r\n      }\r\n    }\r\n    else{\r\n      this.customerHttp.Add(newCustomer).subscribe(\r\n        (response) => {\r\n          this.customers.push(response);\r\n        },\r\n        (error) => {\r\n          if(error.status == \"401\"){\r\n            this.userService.LogOut();\r\n            return;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  UpdateCustomer(customer: Customer){\r\n    let customerIndex = this.customers.map(c => c.nip).indexOf(customer.nip);\r\n\r\n    if(this.customers[customerIndex] != null){\r\n        try{\r\n          this.customerHttp.Update(customer).subscribe(\r\n            (response) => {                  \r\n              this.customers[customerIndex] = response;\r\n            },\r\n            (error) => {\r\n              if(error.status == \"401\"){\r\n                this.userService.LogOut();\r\n                return;\r\n              }\r\n              alert(\"Wystapił błąd podczas połączenia z serwerem\");\r\n          });\r\n        }\r\n        catch(err){\r\n          return 0;\r\n        }\r\n    }\r\n  }\r\n\r\n  //#region Non http methods\r\n\r\n  GetCustomerByIndex(index:number){\r\n    return this.customers[index];\r\n  }\r\n\r\n  GetCustomerByNip(nip: string){\r\n      return this.customers.find(c => c.nip == nip);\r\n  }\r\n\r\n  GetCustomerByName(name: string){\r\n    return this.customers.find(c => c.name === name);\r\n  }\r\n\r\n  CustomerExist(customer: Customer){\r\n      if((this.customers.map(c => c.nip).indexOf(customer.nip)) == -1){\r\n        return false;\r\n      }\r\n      else{\r\n        return true;\r\n      }\r\n  }\r\n\r\n  CustomerEqual(customer: Customer){\r\n      if(this.CustomerExist(customer)){\r\n        let index = this.customers.map(c => c.nip).indexOf(customer.nip);\r\n        let passedCustomer = JSON.stringify(customer);\r\n        let originalCustomer = JSON.stringify(this.GetCustomerByIndex(index));\r\n        if(passedCustomer != originalCustomer){\r\n          return false;\r\n        }\r\n        else{\r\n          return true;\r\n        }\r\n      }\r\n  }\r\n\r\n  AddCustomerNonHttp(customer: Customer){\r\n      this.customers.push(customer);\r\n  }\r\n\r\n  UpdateCustomerNonHttp(customer: Customer){\r\n      let customerIndex = this.customers.map(c => c.nip).indexOf(customer.nip);\r\n      this.customers[customerIndex] = customer;\r\n  }\r\n\r\n  //#endregion\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/customer services/customer.services.ts","import { AutoConfig } from './../../models/auto-config.model';\nimport { SmtpConfigurationModel } from './../../models/smtp-configuration.model';\nimport { Injectable } from '@angular/core';\nimport { CommonService } from './../common.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EmailMessageModel } from './../../models/email-message.model';\n\n@Injectable()\nexport class EmailHttpService {\n\nconstructor(private commonData : CommonService, private httpService: HttpClient) { }\n\n  SendEmail(mesageConfig: EmailMessageModel){\n    return this.httpService.post<any>(\"api/email/SendMail\", mesageConfig,\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\n  }\n\n  ChangeSmtpSettings(settings: SmtpConfigurationModel){\n    return this.httpService.post<any>(\"api/email/ChangeEmailConfiguration\", settings,\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\n  }\n\n  ResetDefaults(){\n    return this.httpService.post<any>(\"api/email/ResetSmtpSettings\", null,\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\n  }\n\n  SmtpAutoConfig(config: AutoConfig){\n    return this.httpService.post<SmtpConfigurationModel>(\"api/email/EmailAutoConfig\", config,\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/email service/email-http.service.ts","import { AutoConfig } from './../../models/auto-config.model';\nimport { EmailHttpService } from './email-http.service';\nimport { EmailMessageModel } from './../../models/email-message.model';\nimport { Injectable } from '@angular/core';\nimport { SmtpConfigurationModel } from '../../models/smtp-configuration.model';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class EmailService {\n\n  smtpSettingsChanged: Subject<boolean> = new Subject<boolean>();\n  autoConfigResult:  Subject<SmtpConfigurationModel> = new Subject<SmtpConfigurationModel>();\n\n  constructor(private emailHttp: EmailHttpService) { }\n\n  SendMessage(message: EmailMessageModel){\n    this.emailHttp.SendEmail(message).subscribe(\n      (response) => {\n        alert(\"Wiadomość wysła na pomyślnie\");\n      },\n      (error) => {\n        alert(\"Nie udało się wysłać\");\n      }\n    );\n  }\n\n  ChangeSmtpSettings(settings: SmtpConfigurationModel){\n    this.emailHttp.ChangeSmtpSettings(settings).subscribe(\n      (response) => {\n        this.smtpSettingsChanged.next(true);\n        return true;\n      },\n      (error) => {\n        alert(\"wystąpił błąd\");\n        this.smtpSettingsChanged.next(false);\n        return false;\n      }\n    );\n  }\n\n  ResetDefaults(){\n    this.emailHttp.ResetDefaults().subscribe(\n      (response) => {\n        this.smtpSettingsChanged.next(true);\n        return true;\n      },\n      (error) => {\n        alert(\"wystąpił błąd\");\n        this.smtpSettingsChanged.next(false);\n        return false;\n      }\n    )\n  }\n\n  SmtpAutoConfig(config: AutoConfig){\n    this.emailHttp.SmtpAutoConfig(config).subscribe(\n      (result) => {\n        this.autoConfigResult.next(result);\n        console.log(\"autoConfigResult\");\n      },\n      (error) => {\n        this.autoConfigResult.next(null);\n        alert(\"Błędna konfiguracja\");\n      }\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/email service/email.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Invoice } from '../../models/invoice.model';\r\nimport { CommonService } from '../common.service';\r\nimport { InvoiceServices } from './invoice.services';\r\n\r\n@Injectable()\r\nexport class InvoiceHttpServices{\r\n  \r\n  constructor(private httpClient: HttpClient, private commonData: CommonService){}\r\n\r\n  GetByNumber(invoiceNumber: number){\r\n    return this.httpClient.get('api/Invoice/GetByNumber?invoiceNumber=' + invoiceNumber,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  GetAll(){\r\n    return this.httpClient.get<Invoice[]>('api/Invoice/GetAll',\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Add(invoice: Invoice){\r\n    return this.httpClient.post<Invoice>(\"api/Invoice/Add\", invoice,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Update(invoice: Invoice){\r\n    return this.httpClient.put<Invoice>(\"api/Invoice/Update\", invoice,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Delete(id: number){\r\n    return this.httpClient.delete<string>(\"api/Invoice/Delete?id=\" + id,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  SettleInvoices(setteledInvoices: number[]){\r\n    return this.httpClient.post<any>(\"api/Invoice/SettleInvoices\", setteledInvoices,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/invoice services/invoice.http.services.ts","//#region import\r\n\r\nimport { InvoiceHttpServices } from './invoice.http.services';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserServices } from './../user services/user.services';\r\nimport { CustomerServices } from '../customer services/customer.services';\r\nimport { Invoice } from '../../models/invoice.model';\r\nimport { Customer } from '../../models/customer.model';\r\nimport { InvoiceItem } from '../../models/invoice-item.model';\r\n//#endregion\r\n\r\n@Injectable()\r\nexport class InvoiceServices{\r\n  constructor(private customerService: CustomerServices, private invoiceHttp: InvoiceHttpServices,private userService: UserServices, private router: Router){}\r\n\r\n  invoices: Invoice[] = [];\r\n  invoicesChanged: Subject<Invoice[]> = new Subject<Invoice[]>();\r\n\r\n  SetInvoiceshttp(){\r\n    this.invoiceHttp.GetAll().subscribe(\r\n      (response) => {\r\n        if(response !== null)\r\n          this.invoices = response;\r\n        this.invoicesChanged.next(this.invoices);\r\n      },\r\n      (error) => {\r\n        alert(\"Wystapił błąd połączenia z serwerem prosze spróbować później\")\r\n    });\r\n\r\n  }\r\n\r\n  GetInvoiceByNumber(number: number){\r\n    let index = this.invoices.map(i => i.invoiceNumber).indexOf(number);\r\n    if(this.invoices[index] != null){\r\n      return this.invoices[index];\r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  AddInvoice(customer: Customer, invoiceItems: InvoiceItem[], paymentDate: Date, paymentType: string){\r\n      if(customer != null && invoiceItems != null){\r\n        let newInvoice = new Invoice();\r\n        //Crating new invoice\r\n        newInvoice.customer = customer;\r\n        newInvoice.invoiceItems = invoiceItems;\r\n        newInvoice.paymentType = paymentType;\r\n        newInvoice.paymentDate = paymentDate;\r\n        newInvoice.invoiceDate = this.SetInvoiceDate();\r\n        newInvoice.itemsPriceTotal = this.CalculateTotalPrice(invoiceItems);\r\n        newInvoice.accounted = this.SetInvoicePaymentStatus(paymentType);\r\n\r\n        this.invoiceHttp.Add(newInvoice).subscribe(\r\n          (response) => {\r\n            newInvoice = response;\r\n            this.invoices.push(newInvoice);\r\n\r\n            if(!this.customerService.CustomerExist(newInvoice.customer)){\r\n              this.customerService.AddCustomerNonHttp(newInvoice.customer);\r\n            }\r\n            else{\r\n              if(!this.customerService.CustomerEqual(newInvoice.customer)){\r\n                this.customerService.UpdateCustomerNonHttp(newInvoice.customer);\r\n              }\r\n            }\r\n          },\r\n          (error) => {\r\n            if(error.status == \"401\"){\r\n              this.userService.LogOut();\r\n              return;\r\n            }\r\n            alert(\"Wystapił błąd proszę spróbować później\");\r\n          });\r\n      }\r\n  }\r\n\r\n  UpdateInvoice(invoiceToUpdate: Invoice, customer: Customer, invoiceItems: InvoiceItem[], paymentDate: Date, paymentType: string, number: number){\r\n    //set customer data\r\n    this.SetCustomerData(invoiceToUpdate['customer'], customer);\r\n    //set invoiceItems data\r\n    this.SetInvoicItemsData(invoiceToUpdate['invoiceItems'], invoiceItems);\r\n    invoiceToUpdate.paymentType = paymentType;\r\n    invoiceToUpdate.paymentDate = paymentDate;\r\n    invoiceToUpdate.itemsPriceTotal = this.CalculateTotalPrice(invoiceItems); \r\n\r\n    //http update\r\n    this.invoiceHttp.Update(invoiceToUpdate).subscribe(\r\n      (response) => {\r\n        let index = this.invoices.map(i => i.invoiceNumber).indexOf(number);\r\n        this.invoices[index] = response;\r\n\r\n        if(!this.customerService.CustomerExist(invoiceToUpdate['customer'])){\r\n          this.customerService.AddCustomerNonHttp(invoiceToUpdate['customer']);\r\n        }\r\n        else{\r\n          if(!this.customerService.CustomerEqual(invoiceToUpdate['customer'])){\r\n            this.customerService.UpdateCustomerNonHttp(invoiceToUpdate['customer']);\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        if(error.status == \"401\"){\r\n          this.userService.LogOut();\r\n          return;\r\n        }\r\n        alert(\"Wystapił błąd proszę spróbować później, dane nie zostały zmienione\");\r\n      });\r\n  }\r\n\r\n  DeleteInvoice(invoiceNumber: number){\r\n    let index = this.invoices.map(i => i.invoiceNumber).indexOf(invoiceNumber);\r\n    if(this.invoices[index] != null){\r\n      this.invoiceHttp.Delete(this.invoices[index].id).subscribe(\r\n        (response) => {        \r\n          this.invoices.splice(index,1);\r\n        },\r\n        (error) => {\r\n          if(error['status'] == \"401\"){\r\n            this.userService.LogOut();\r\n            return;\r\n          }\r\n          if(error.error.text == \"Invoice is not last\"){\r\n            alert(\"Nie można usunąć faktury, nie jest ona ostatnią wystawioną fakturą.\");\r\n          }\r\n        }  \r\n      )\r\n    }\r\n    else{\r\n      alert(\"Nie znaleziono faktury\")\r\n    }\r\n  }\r\n\r\n  SettleInvoices(setteledInvoices: number[], nip: string){\r\n    this.invoiceHttp.SettleInvoices(setteledInvoices).subscribe(\r\n      () => {\r\n        for(let number of setteledInvoices){\r\n          let invoce = this.GetInvoiceByNumber(number);\r\n          invoce.accounted = true;\r\n        }\r\n        this.router.navigate([\"/customer\"]);\r\n      },\r\n      (error) => {\r\n        if(error.error.text == \"Invalid user\"){\r\n          this.userService.LogOut();\r\n        }\r\n        if(error.error.text == \"Invalid data\"){\r\n          alert(\"Nie zaznaczyłeś żadnej faktury do rozlicznia\");\r\n        }\r\n        else{\r\n          alert(\"Wystapił błąd proszę spróbować później, dane nie zostały zmienione\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n  //#region private methods\r\n\r\n  private SetInvoiceDate(){\r\n    let timeNow = new Date()\r\n    return timeNow;\r\n  }\r\n  \r\n  private CalculateTotalPrice(invoiceItems: InvoiceItem[]){\r\n    let totalPrice = invoiceItems.map(i => i.totalPriceWithTax).reduce((a,b)=> Number(a) + Number(b));\r\n    return totalPrice;\r\n  }\r\n\r\n  private SetCustomerData(customerToUpdate: Customer, customer: Customer){\r\n\r\n    if(this.customerService.GetCustomerByNip(customer.nip) != null){\r\n      customer = this.customerService.GetCustomerByNip(customer.nip);\r\n    }\r\n    customerToUpdate.id = customer.id;\r\n    customerToUpdate.address = customer.address;\r\n    customerToUpdate.city = customer.city;\r\n    customerToUpdate.email = customer.email;\r\n    customerToUpdate.name = customer.name;\r\n    customerToUpdate.nip = customer.nip;\r\n    customerToUpdate.postCode = customer.postCode;\r\n  }\r\n\r\n  private SetInvoicItemsData(itemsToUpdate: InvoiceItem[], invoiceItems: InvoiceItem[]){\r\n    let index = 0;\r\n    for(let i = 0; i < itemsToUpdate.length; i++){\r\n      itemsToUpdate[i].amount = invoiceItems[i].amount;\r\n      itemsToUpdate[i].name = invoiceItems[i].name;\r\n      itemsToUpdate[i].tax = invoiceItems[i].tax;\r\n      itemsToUpdate[i].totalPriceWithoutTax = invoiceItems[i].totalPriceWithoutTax;\r\n      itemsToUpdate[i].totalPriceWithTax = invoiceItems[i].totalPriceWithTax;\r\n      itemsToUpdate[i].unitPriceWithoutTax = invoiceItems[i].unitPriceWithoutTax;\r\n      index++;\r\n    }\r\n    for(let i = index; i < invoiceItems.length; i++){\r\n      itemsToUpdate.push(invoiceItems[i]);\r\n    }\r\n  }\r\n\r\n  private SetInvoicePaymentStatus(paymentType: string){\r\n    if(paymentType == \"gotówka\")\r\n      return true\r\n    return false;\r\n  }\r\n\r\n  //#endregion\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/invoice services/invoice.services.ts","\r\nimport { UserServices } from './../user services/user.services';\r\nimport { Injectable } from '@angular/core';\r\nimport {Router, CanActivate } from '@angular/router';\r\n@Injectable()\r\nexport class CanActivateGuard implements CanActivate {\r\n\r\n  constructor(private userService: UserServices, private router: Router) {\r\n    \r\n  }\r\n  canActivate(){\r\n    if(this.userService.signedIn){\r\n      return true;\r\n    }\r\n    this.router.navigate(['/user/login'])\r\n    return false;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/local authorization/can-activate-guard.service.ts","import { ChangePasswordModel } from './../../models/change-password.model';\r\nimport { RegisterModel } from './../../models/register.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { UserServices } from './user.services';\r\nimport { UserModel } from './../../models/user.model';\r\nimport { CommonService } from './../common.service';\r\nimport { LoginModel } from '../../models/login.model';\r\nimport { TokenModel } from '../../models/token.model';\r\n\r\n@Injectable()\r\nexport class UserHttpServices{\r\n  constructor(private userHttp: HttpClient, private userService: HttpClient, private commonData: CommonService) {}\r\n\r\n  Login(loginData: LoginModel){\r\n    return this.userHttp.post<UserModel>(\"api/account/Login\", loginData);\r\n  }\r\n\r\n  LogOut(){\r\n    return this.userHttp.post<any>(\"api/account/Logout\", null, \r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  Register(registerData: RegisterModel){\r\n    return this.userHttp.post<any>(\"api/account/Register\", registerData);\r\n  }\r\n\r\n  ChangePassword(passwordData: ChangePasswordModel){\r\n    return this.userHttp.post<any>(\"api/account/ChangePassword\", passwordData,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  ChangeUserData(userData: UserModel){\r\n    return this.userHttp.post<any>(\"api/account/UpdateUser\", userData, \r\n    {headers: new HttpHeaders().set('Authorization',\"Bearer \" + this.commonData.token['token'])});\r\n  }\r\n\r\n  GetToken(loginData: LoginModel){\r\n    return this.userHttp.post<TokenModel>(\"/api/account/CreateToken\", loginData);\r\n  }\r\n\r\n  TokenExpired(){\r\n    return this.userHttp.post<any>(\"/api/account/CheckIfExpired\", null,\r\n    {headers: new HttpHeaders().set( 'Authorization',\"Bearer \" + this.commonData.token['token'])})\r\n  }\r\n\r\n  IsAvailabel(paramsArray: string[]){\r\n    return this.userHttp.post<boolean>('/api/account/IsAvailable', paramsArray);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/user services/user.http.services.ts","//#region import\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { UserModel } from './../../models/user.model';\r\nimport { LoginModel } from '../../models/login.model';\r\nimport { TokenModel } from './../../models/token.model';\r\nimport { CommonService } from '../common.service';\r\nimport { UserHttpServices } from './user.http.services';\r\nimport { ChangePasswordModel } from './../../models/change-password.model';\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { RegisterModel } from \"../../models/register.model\";\r\n//#endregion\r\n\r\n@Injectable()\r\nexport class UserServices{\r\n\r\n  //#region properties\r\n\r\n  signedIn : boolean = false;\r\n  signinStatusChanged: Subject<boolean> = new Subject<boolean>();\r\n  userInactive = false;\r\n  activeTimer;\r\n  userData: UserModel = new UserModel();\r\n  loginData: LoginModel = new LoginModel();\r\n\r\n  //#endregion\r\n  \r\n  constructor(private userHttp: UserHttpServices, private router: Router, private commonData: CommonService) {}\r\n\r\n  Login(loginData : LoginModel){\r\n    this.userHttp.Login(loginData).subscribe(\r\n      (response) => {\r\n        this.loginData = loginData;\r\n        this.userData = response;\r\n        this.signedIn = true;\r\n\r\n        this.userHttp.GetToken(loginData).subscribe(\r\n          (response) => {\r\n            this.commonData.token = response;         \r\n            this.signinStatusChanged.next(this.signedIn);\r\n          }\r\n        );\r\n\r\n        this.router.navigate([\"/invoice\"]);\r\n      },\r\n      (error) => {\r\n        this.signedIn = false; \r\n        this.signinStatusChanged.next(this.signedIn);\r\n        if(error['error'] == \"Bad username or password\"){\r\n          alert(\"Złe dane logowania\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  LogOut(){\r\n    this.userHttp.LogOut().subscribe(\r\n      () => {\r\n        this.userData = null;\r\n        this.loginData = null;\r\n        this.signedIn = false;\r\n        this.userInactive = false;\r\n        this.commonData.token['token'] = '';\r\n        this.signinStatusChanged.next(this.signedIn);\r\n        this.router.navigate(['/user/login']);\r\n      }\r\n    );\r\n  }\r\n\r\n  Register(regsiterData: RegisterModel){\r\n    this.userHttp.Register(regsiterData).subscribe(\r\n      () => {\r\n        alert(\"Zarejstrowano pomyslnie\");\r\n        this.router.navigate(['/user/login']);\r\n      },\r\n      (error) => {\r\n        if(error.error == \"Register is locked\"){\r\n          alert(\"Nie posiadasz uprawnienień aby dokonać rejestracji\");\r\n          return;\r\n        }\r\n        if(error.error == \"Invalid data\"){\r\n          alert(\"Wprowadzone dane są błędne\");\r\n          return;\r\n        }\r\n\r\n        alert(\"Błąd połączenia z serwerem\");\r\n        return;\r\n      }\r\n    )\r\n  }\r\n\r\n  GetToken(loginData : LoginModel){\r\n    this.userHttp.GetToken(loginData).subscribe(\r\n      (response) => {\r\n        this.commonData.token = response;\r\n      },\r\n      (error) => {\r\n        if(this.signedIn)\r\n          this.LogOut();\r\n      })\r\n  }\r\n\r\n  ChangePassword(newData: ChangePasswordModel){\r\n    this.userHttp.ChangePassword(newData).subscribe(\r\n      () => {\r\n        this.loginData.password = newData.password;\r\n        alert(\"Zaktualizowano hasło\");\r\n      },\r\n      (error) => {\r\n        if(error.status == \"401\"){\r\n          this.LogOut();\r\n          return;\r\n        }\r\n        alert(\"Błąd połączenia z serwerem\");\r\n      }\r\n    );\r\n  }\r\n\r\n  ChangeUserData(newData: UserModel){\r\n    this.userHttp.ChangeUserData(newData).subscribe(\r\n      () => {\r\n        this.userData = newData;\r\n        alert(\"Zaktualizowano Twoje dane\");\r\n      },\r\n      (error) => {\r\n        if(error.status == \"401\"){\r\n          this.LogOut();\r\n          return;\r\n        }\r\n        alert(\"Błąd połączenia z serwerem\");\r\n      }\r\n    );\r\n  }\r\n\r\n  CheckTokenExpired(){\r\n    if(this.commonData.token['token'] != '' && this.commonData.token != null){\r\n      this.userHttp.TokenExpired().subscribe(\r\n        (notExpired) =>{\r\n          this.GetToken(this.loginData);\r\n        },\r\n        (expired) =>{\r\n          if(this.signedIn)\r\n            this.LogOut();\r\n        });\r\n    }\r\n  }\r\n\r\n  StartActiveTimer(){\r\n    this.activeTimer = setTimeout(() => {\r\n      this.userInactive = true;\r\n    }, 60000);\r\n  }\r\n\r\n  ResetActiveTimer(){\r\n    clearTimeout(this.activeTimer);\r\n    this.userInactive = false;\r\n    this.StartActiveTimer();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/user services/user.services.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/main.ts"],"sourceRoot":"webpack:///"}